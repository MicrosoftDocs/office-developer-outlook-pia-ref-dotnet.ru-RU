<Type Name="_OlkComboBox" FullName="Microsoft.Office.Interop.Outlook._OlkComboBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c820bf50404a80db164080f3f14e21ad21d54c4c" /><Meta Name="ms.sourcegitcommit" Value="edbc1e709f796342c771b5226636c7e9dde40a82" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53139613" /></Metadata><TypeSignature Language="C#" Value="public interface _OlkComboBox" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _OlkComboBox" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._OlkComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Interface _OlkComboBox" />
  <TypeSignature Language="C++ CLI" Value="public interface class _OlkComboBox" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000672DE-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Это основной интерфейс в компонентном классе COM, который требуется управляемому программному коду для взаимодействия с соответствующим объектом COM. Используйте этот основной интерфейс только в тех случаях, когда метод, который предполагается использовать, имеет такое же имя, как событие объекта COM; в таких случаях для вызова метода приведите к этому интерфейсу, для соединения с событием приведите к интерфейсу последних событий. Иначе используйте интерфейс .NET, который создается но основе компонентного класса COM для доступа к методам, свойствам и событиям объекта COM. Сведения об объекте COM см. в <see cref="T:Microsoft.Office.Interop.Outlook.OlkComboBox" /> .</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public void AddItem (string ItemText, object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddItem([in]string ItemText, [in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.AddItem(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddItem (ItemText As String, Optional Index As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ItemText" Type="System.String" />
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ItemText">Значение, добавленное в список в поле комбо.</param>
        <param name="Index">Значение на основе 0, которое указывает порядок нового элемента в списке.</param>
        <summary>Добавляет элемент в список с необязательным указанием индекса для нового элемента, который будет отображаться в списке.</summary>
        <remarks><para>Если значение равно или больше числа элементов в списке, новый элемент будет добавлен в конец  <paramref name="Index" /> списка.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>boolean</b> <b>(bool</b> в C#), который автоматически определяет размер управления для отображения всего содержимого.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>  Значение по умолчанию для этого свойства <b>false</b>.</para>
          <para>Параметр <b>AutoSize</b> to <b>True</b> автоматически задает ширину области отображения до длины текста в поле комбо. Это поведение похоже на одностройное текстовое поле. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoTab">
      <MemberSignature Language="C#" Value="public bool AutoTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoTab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.AutoTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <b>Boolean</b> <b>(bool</b> в C#), которое указывает, вставляется ли вкладка автоматически при заполнении управления до максимальной указанной длины. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>  Значение по умолчанию для этого свойства <b>false</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelect">
      <MemberSignature Language="C#" Value="public bool AutoWordSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.AutoWordSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает элемент <b>Boolean</b> <b>(bool</b> в C#), который указывает, является ли слово или символ базовым элементом, используемым для расширения выбора.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию — <b>True</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public uint BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 BackColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 BackColor { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.OLE_COLOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>значение UInteger</b> <b>(uint</b> in C#), которое указывает фоновый цвет управления. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство имеет тип <b>OLE_COLOR</b> <b>UInteger</b> <b>(uint</b> in C#). Значение по умолчанию для этого свойства 0x80000005 "Окно". </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlBorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlBorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As OlBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlBorderStyle BorderStyle { Microsoft::Office::Interop::Outlook::OlBorderStyle get(); void set(Microsoft::Office::Interop::Outlook::OlBorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:Microsoft.Office.Interop.Outlook.OlBorderStyle" /> констант, определяемую стилем границы вокруг управления.   Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По умолчанию значение <b>olBorderStyleSingle</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-554)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все объекты из списка в поле комбо.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Копирует содержимое управления в буфер обмена.</summary>
        <remarks><para>Данные копируется в неформатированном текстовом формате, заменяя существующее содержимое буфера обмена.</para>
          <para>Если стилем управления является <b>olComboBoxStyleListBox,</b>то этот метод копирует текущий выбор в выпадаемом списке в буфер обмена.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет содержимое управления и копирует содержимое в буфер обмена.</summary>
        <remarks><para>Данные копируется в буфер обмена в неформатированном текстовом формате, заменяя существующее содержимое буфера обмена.</para>
          <para>Если стилем управления <b>является olComboBoxStyleListBox,</b>то этот метод не будет ничего резать.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DragBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlDragBehavior DragBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlDragBehavior DragBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.DragBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DragBehavior As OlDragBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlDragBehavior DragBehavior { Microsoft::Office::Interop::Outlook::OlDragBehavior get(); void set(Microsoft::Office::Interop::Outlook::OlDragBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(225)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlDragBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает констант, которая указывает, включает ли система функцию перетаскивания для <see cref="T:Microsoft.Office.Interop.Outlook.OlDragBehavior" /> этого управления.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По умолчанию значение <b>olDragDropDisabled</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public void DropDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DropDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Расширяет выпадаемую часть комбо-окна.</summary>
        <remarks><para>Имитирует нажатие кнопки "Падение" на пульте управления. Этот метод вызывает <see cref="E:Microsoft.Office.Interop.Outlook.OlkComboBoxEvents_Event.DropButtonClick" /> событие, чтобы сгореть.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>boolean</b> <b>(bool</b> в C#), который указывает, разрешено ли работать управление.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию — <b>True</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterFieldBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior EnterFieldBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior EnterFieldBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.EnterFieldBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property EnterFieldBehavior As OlEnterFieldBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlEnterFieldBehavior EnterFieldBehavior { Microsoft::Office::Interop::Outlook::OlEnterFieldBehavior get(); void set(Microsoft::Office::Interop::Outlook::OlEnterFieldBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior" /> констант, которая указывает поведение выбора при вводе управления. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По умолчанию значение <b>olEnterFieldBehaviorSelectAll</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public stdole.StdFont Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdFont Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As StdFont" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdFont ^ Font { stdole::StdFont ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>StdFont,</b> который представляет шрифт, используемый для отрисовки текста внутри управления.  Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Шрифт выражается как <b>stdfont</b>Windows типа Microsoft.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public uint ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ForeColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 ForeColor { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.OLE_COLOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>значение UInteger</b> <b>(uint</b> in C#), которое указывает на цвет переднего плана управления. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство имеет тип <b>OLE_COLOR</b> <b>UInteger</b> <b>(uint</b> in C#). Значение по умолчанию для этого свойства 0x80000008 "Window Text".  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public string GetItem (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetItem([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (Index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetItem(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">Нулевое значение, которое указывает расположение элемента в списке.</param>
        <summary>Получает <b>строку</b> <b>(строку</b> в C#), которая представляет элемент в указанном расположении в списке элемента управления полем комбо.</summary>
        <returns>Значение <b>String</b> <b>(string</b> in C#), которое представляет элемент в указанном расположении в списке.</returns>
        <remarks><para>Если он находится за пределами допустимого диапазона значений (от нуля до -1), то будет возвращена ошибка, не связанная с <paramref name="Index" /> <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" /> границами.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>boolean</b> <b>(bool</b> в C#), который указывает, отображается ли выбор или скрывается для управления, когда управление теряет фокус.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию этого свойства <b>true</b>. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListCount">
      <MemberSignature Language="C#" Value="public int ListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение <b>Integer (int</b> in C#), которое указывает количество элементов в выпадаемом списке элемента управления коробкой комбо.<b></b> Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию нулевое, что указывает на отсутствие элементов в списке.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListIndex">
      <MemberSignature Language="C#" Value="public int ListIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ListIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-526)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <b>Integer (int</b> in C#), которое указывает расположение выбранного элемента в списке элемента управления полем комбо.<b></b> Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>ListIndex</b> — это нулевая индексация значений в массив элементов в списке.  Значение по умолчанию — -1, что указывает на то, что элемент не выбран.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>boolean</b> <b>(bool</b> в C#), который указывает, заблокирован ли управление от изменения.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию — <b>False</b>.</para>
          <para>Когда управление заблокировано, он не имеет "отключенного" внешнего вида, но пользователь не может изменить содержимое управления.  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <b>Integer (int</b> in C#), которое указывает максимальное количество символов для этого<b></b> <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> управления.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию нулевое, а это означает, что для этого управления не определена максимальная длина значения. Максимальная длина по-прежнему может быть на месте в зависимости от доступной памяти или других факторов.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseIcon">
      <MemberSignature Language="C#" Value="public stdole.StdPicture MouseIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdPicture MouseIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MouseIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseIcon As StdPicture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdPicture ^ MouseIcon { stdole::StdPicture ^ get(); void set(stdole::StdPicture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdPicture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>stdPicture,</b> представляюшку настраиваемую картинку для курсора мыши для этого управления. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение по умолчанию <b>является Nothing</b> (null reference (Nothing in Visual Basic) в C#).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePointer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MousePointer" />
      <MemberSignature Language="VB.NET" Value="Public Property MousePointer As OlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlMousePointer MousePointer { Microsoft::Office::Interop::Outlook::OlMousePointer get(); void set(Microsoft::Office::Interop::Outlook::OlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает констант, указывав тип указателя, отображаемого при позиционировании мыши над <see cref="T:Microsoft.Office.Interop.Outlook.OlMousePointer" /> управлением.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По умолчанию значение <b>olMousePointerDefault</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вклеить содержимое буфера обмена в управление.</summary>
        <remarks><para>Содержимое буфера обмена вклеилось в неформатированный текст.</para>
          <para>Этот метод не вклеит ничего, если управление <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Style" /> <b>olComboBoxStyleListBox</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItem (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItem(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-555)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">Нулевая индексация значения в массив элементов в списке.</param>
        <summary>Удаляет указанный элемент из списка.</summary>
        <remarks><para>Если он находится за пределами допустимого диапазона значений (от нуля до -1), то будет возвращена ошибка, не связанная с <paramref name="Index" /> <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" /> границами. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMargin">
      <MemberSignature Language="C#" Value="public bool SelectionMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionMargin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelectionMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMargin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionMargin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>boolean (bool</b> в C#), который указывает, может ли пользователь выбрать строку текста, щелкнув в регионе слева от текста.<b></b>   Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Если <b>True,</b>щелчок в поле вызывает выбор текста.  Если <b>false,</b>это действие не выбирает текст. Значение по умолчанию — <b>False</b>.  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelLength">
      <MemberSignature Language="C#" Value="public int SelLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <b>Integer (int</b> in C#), которое указывает количество символов в текущем выборе.<b></b>  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Текущий выбор указывается <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" /> , который является частью управления <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> . Максимальное количество символов, которые <b></b> можно поддерживать для <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" /> Значения.</para>
          <para>Значение по умолчанию нулевое, что означает, что текст в настоящее время не выбран. </para>
          <para>Свойство <b>SelLength</b> всегда допустимо, даже если у управления нет фокуса.</para>
          <para>Параметр <b>SelLength для</b> значения меньше нуля вызывает ошибку.   Попытка установить значение, большее, чем <b>MaxLength,</b> приводит к настройке <b>SelLength</b> до <b>MaxLength.</b>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelStart">
      <MemberSignature Language="C#" Value="public int SelStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-547)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-547)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <b>Integer (int</b> in C#), которое указывает либо отправную точку выбранного текста, либо точку вставки, если текст не выбран.<b></b>    Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Текущий выбор указывается <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" /> , который является частью управления <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> . Максимальное количество символов, которые <b></b> можно поддерживать для <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" /> Значения.</para>
          <para>Значение по умолчанию нулевое, что означает, что текст не выбран, а точка вставки находится в начале.</para>
          <para>Свойство <b>SelStart всегда</b> допустимо, даже если у управления нет фокуса.  Параметр <b>SelStart для</b> значения меньше нуля вызывает ошибку.  Параметр <b>SelStart для</b> значения, большего, чем <b>MaxLength,</b> сбросит <b>SelStart</b> на <b>MaxLength.</b>  Изменение значения <b>SelStart отменяет</b> существующий выбор, помещает точку вставки в текст и задает свойство <b>SelLength</b> нулю. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelText">
      <MemberSignature Language="C#" Value="public string SelText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>строку</b> <b>(строка</b> в C#), которая представляет выбранную часть значения окне комбо.    Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>SelText</b> представляет текущий выбор, который является частью управления <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> . Максимальное количество символов, которые <b></b> можно поддерживать для <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" /> Значения.</para>
          <para>Значение по умолчанию: пустая строка.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int Index, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem([in]int32 Index, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.SetItem(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (Index As Integer, Item As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int Index, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64478)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Index">Нулевое значение, которое указывает расположение элемента в списке.</param>
        <param name="Item">Значение, используемого для обновления списка в указанном расположении.</param>
        <summary>Задает элемент в указанном расположении в списке окне комбо к указанному значению.</summary>
        <remarks><para>Если он находится за пределами допустимого диапазона значений (от нуля до -1), то будет возвращена ошибка, не связанная с <paramref name="Index" /> <see cref="P:Microsoft.Office.Interop.Outlook._OlkListBox.ListCount" /> границами. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlComboBoxStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlComboBoxStyle Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As OlComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlComboBoxStyle Style { Microsoft::Office::Interop::Outlook::OlComboBoxStyle get(); void set(Microsoft::Office::Interop::Outlook::OlComboBoxStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает констант, чтобы указать, как пользователь может выбрать или задать <see cref="T:Microsoft.Office.Interop.Outlook.OlComboBoxStyle" /> значение управления.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По умолчанию значение <b>olComboBoxStyleCombo</b>. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>строку</b> <b>(строка</b> в C#), которая является текстом, отображаемой в области управления. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение свойства <b>Text</b> по умолчанию — пустая строка.</para>
          <para>Свойство <b>Text</b> предоставляет то же значение, что и свойство, но его сильно введите как <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> <b>строка</b> (строка<b></b> в C#).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlTextAlign TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlTextAlign TextAlign" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As OlTextAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlTextAlign TextAlign { Microsoft::Office::Interop::Outlook::OlTextAlign get(); void set(Microsoft::Office::Interop::Outlook::OlTextAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlTextAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:Microsoft.Office.Interop.Outlook.OlTextAlign" /> констант, которая указывает, как текст выравнивается в области управления.  Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По умолчанию значение <b>olTextAlignLeft</b> на левом и правом языках, таких как английский.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TopIndex">
      <MemberSignature Language="C#" Value="public int TopIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.TopIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TopIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TopIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <b>Integer (int</b> in C#), которое представляет индекс элемента в верхней части отображаемой части списка в поле комбо.<b></b> Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>По мере прокрутки списка элемент в верхней части списка будет изменяться, а значение этого свойства изменится, чтобы отразить элемент, отображаемый в верхней части списка.</para>
          <para>Значение индекса нулевое. Значение по умолчанию —1, что указывает на то, что не следует применять специальный порядок.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>объект,</b> который представляет содержимое, выбранное в списке, отображаемом управлением. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks><para>Значение такое же, как и значение , за исключением того, что это свойство Object и Text сильно введите как <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Text" /> <b>String</b> <b>(строка</b> в C#). <b></b> <b></b>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
