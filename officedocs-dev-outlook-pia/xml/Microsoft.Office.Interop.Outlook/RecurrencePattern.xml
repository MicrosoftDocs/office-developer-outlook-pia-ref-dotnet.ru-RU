<Type Name="RecurrencePattern" FullName="Microsoft.Office.Interop.Outlook.RecurrencePattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0d4b4e4bfa2975577306ca466d47c09c5f4fad3" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20640493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface RecurrencePattern" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract RecurrencePattern" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" />
  <TypeSignature Language="VB.NET" Value="Public Interface RecurrencePattern" />
  <TypeSignature Language="C++ CLI" Value="public interface class RecurrencePattern" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063044-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="06da9-101">Представляет шаблон вероятность повторяющихся встреч и задач для соответствующего <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> и <see cref="T:Microsoft.Office.Interop.Outlook.TaskItem" /> объекта.</span>
      <span class="sxs-lookup">
        <span data-stu-id="06da9-101">Represents the pattern of incidence of recurring appointments and tasks for the associated <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  and <see cref="T:Microsoft.Office.Interop.Outlook.TaskItem" />  object.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="06da9-102">
        <para>Метод <b>GetRecurrencePattern</b> используется для возврата объекта <b>RecurrencePattern</b> , связанного с объектом <b>AppointmentItem</b> или <b>TaskItem</b> .</para>
        <para>Телефонной <b>GetRecurrencePattern</b> или <b>ClearRecurrencePattern</b> действует со стороны задания свойства <b>IsRecurring</b> элемента соответствующим образом. Это свойство можно использовать для эффективного фильтрацию требуется <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> объект.</para>
        <para>Тип шаблона повторения обозначается <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> свойство. Является ли данное свойство <b>RecurrenceType</b> первого свойства следует устанавливать.</para>
        <para>Для всех шаблоны повторения допустимы следующие свойства: <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />, <b>StartDate</b><see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" />, или <b>Тип</b>.</para>
        <para>В следующей таблице показаны свойства, которые являются допустимыми для повторения различных типов. Если элемент сохраняется и свойство имеет значение null или содержит недопустимое значение, возникает ошибка. Ежемесячно и ежегодно данных являются допустимыми только в течение одного дня. Еженедельные шаблоны действительны только как <b>или</b> из <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" /> .</para>
        <list type="table">
          <item>
            <description>
              <b>olRecursDaily</b>
            </description>
            <description>
              <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Duration" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" /></description>
          </item>
          <item>
            <description>
              <b>olRecursWeekly</b>
            </description>
            <description>
              <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" />, <b>длительность</b>, <b>EndTime </b>, <b>Интервала</b>, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
          </item>
          <item>
            <description>
              <b>olRecursMonthly</b>
            </description>
            <description>
              <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfMonth" />, <b>длительность</b>, <b>Время окончания</b><b>интервала</b>, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
          </item>
          <item>
            <description>
              <b>olRecursMonthNth</b>
            </description>
            <description>
              <b>DayOfWeekMask </b>, <b>Длительность</b>, <b>время окончания</b>, <b>интервал</b><see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Instance" />, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
          </item>
          <item>
            <description>
              <b> olRecursYearly</b>
            </description>
            <description>
              <b>день месяца</b>, <b>длительность</b>, <b>время окончания</b>, <b>интервал</b><see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.MonthOfYear" />, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b> Время начала</b></description>
          </item>
          <item>
            <description>
              <b>olRecursYearNth</b>
            </description>
            <description>
              <b>DayOfWeekMask</b>, <b>длительность</b>, <b>время окончания</b><b>интервала</b>, <b>экземпляр</b>, <b>NoEndDate</b>, <b>вхождения</b>, <b> PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
          </item>
        </list>
        <para>при работе с элементами повторяющихся встреч, следует удалить любые предыдущие ссылки, получить новые ссылки к повторяющейся встречи до можно получить доступ к или изменить элемент и удалить эти ссылки сразу по завершении и сохранить изменения. Такой подход применяется к регулярное <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объекта и какие-либо <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> или <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекта. Для удаления ссылки в Visual Basic задано значение <b>Nothing</b>, существующий объект. В C# явно освободить память для этого объекта. </para>
        <para>Обратите внимание, что даже после освобождения ссылки и попытаться получить ссылку на новый, если по-прежнему активная ссылка, назначенные другой надстройки или Outlook к одному из объектов выше, новая ссылка будет по-прежнему указывают на устаревших копию объект. Таким образом, важно освобождение ссылки сразу же по завершении с повторяющейся встречи.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="06da9-102">
          <para>Use the <b>GetRecurrencePattern</b>  method to return the <b>RecurrencePattern</b> object associated with an <b>AppointmentItem</b> or <b>TaskItem</b> object.</para>
          <para>Calling <b>GetRecurrencePattern</b> or <b>ClearRecurrencePattern</b>  has the side effect of setting the <b>IsRecurring</b>  property of the item accordingly. This property can be used as required for efficient filtering of the <see cref="T:Microsoft.Office.Interop.Outlook.Items" />  object.</para>
          <para>The type of recurrence pattern is indicated by the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" />  property. The <b>RecurrenceType</b> property is the first property you should set.</para>
          <para>The following properties are valid for all recurrence patterns: <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />, <b>StartDate</b>, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" />, or <b>Type</b>.</para>
          <para>The following table shows the properties that are valid for the different recurrence types. An error occurs if the item is saved and the property is null or contains an invalid value. Monthly and yearly patterns are only valid for a single day. Weekly patterns are only valid as the <b>Or</b> of the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" /> .</para>
          <list type="table">
            <item>
              <description>
                <b>olRecursDaily</b>
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Duration" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" /></description>
            </item>
            <item>
              <description>
                <b>olRecursWeekly</b>
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" />, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
            </item>
            <item>
              <description>
                <b>olRecursMonthly</b>
              </description>
              <description>
                <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfMonth" />, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
            </item>
            <item>
              <description>
                <b>olRecursMonthNth</b>
              </description>
              <description>
                <b>DayOfWeekMask</b>, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Instance" />, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
            </item>
            <item>
              <description>
                <b>olRecursYearly</b>
              </description>
              <description>
                <b>DayOfMonth</b>, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.MonthOfYear" />, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
            </item>
            <item>
              <description>
                <b>olRecursYearNth</b>
              </description>
              <description>
                <b>DayOfWeekMask</b>, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>Instance</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
            </item>
          </list>
          <para>When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes. This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. To release a reference in Visual Basic, set that existing object to <b>Nothing</b>. In C#, explicitly release the memory for that object. </para>
          <para>Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-103">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> объект, представляющий родительский приложение Outlook для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-103">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span>
          </span>
          <span data-ttu-id="06da9-104">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-104">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-105">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> константа, класс объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span>
          </span>
          <span data-ttu-id="06da9-106">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-106">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfMonth">
      <MemberSignature Language="C#" Value="public int DayOfMonth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfMonth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfMonth" />
      <MemberSignature Language="VB.NET" Value="Public Property DayOfMonth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfMonth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4096)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-107">Возвращает или задает <b>Integer</b> (<b>целое</b> в C#) значение, указывающее день месяца, на котором происходит повторяющейся встречи или задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-107">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value indicating the day of the month on which the recurring appointment or task occurs.</span>
          </span>
          <span data-ttu-id="06da9-108">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-108">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeekMask">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlDaysOfWeek DayOfWeekMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlDaysOfWeek DayOfWeekMask" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" />
      <MemberSignature Language="VB.NET" Value="Public Property DayOfWeekMask As OlDaysOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlDaysOfWeek DayOfWeekMask { Microsoft::Office::Interop::Outlook::OlDaysOfWeek get(); void set(Microsoft::Office::Interop::Outlook::OlDaysOfWeek value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlDaysOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-109">Возвращает или задает <see cref="T:Microsoft.Office.Interop.Outlook.OlDaysOfWeek" /> константу, представляющую маски для дней недели, на котором происходит повторяющейся встречи или задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-109">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlDaysOfWeek" /> constant representing the mask for the days of the week on which the recurring appointment or task occurs.</span>
          </span>
          <span data-ttu-id="06da9-110">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-110">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-111">
            <para>
              <b>DayOfWeekMask</b> должно быть установлено после <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> свойства и до <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" /> и <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" /> задано. </para>
            <para>Ежемесячно и ежегодно узоры действительны только в течение одного дня. Еженедельные шаблоны действительны только как <b>или</b> из <b>DayOfWeekMask</b>. </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-111">
              <para>The <b>DayOfWeekMask</b> should be set after the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> property has been set and before the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" /> and <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" /> properties are set. </para>
              <para>Monthly and yearly patterns are only valid for a single day. Weekly patterns are only valid as the <b>Or</b> of the <b>DayOfWeekMask</b>. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-112">Возвращает или задает <b>Integer</b> (<b>целое</b> в C#) значение, указывающее интервал (в минутах) из <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-112">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value indicating the duration (in minutes) of the <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" />.</span>
          </span>
          <span data-ttu-id="06da9-113">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-113">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-114">
            <para>Для повторения, это свойство используется только для встреч.</para>
            <para>Для создания в течение одного дня для событием на целый день, равным во время выполнения 1440.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-114">
              <para>For recurrences, this property is only valid for appointments.</para>
              <para>To create a duration of one day for an all-day event, set the duration equal to 1440. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTime">
      <MemberSignature Language="C#" Value="public DateTime EndTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime EndTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />
      <MemberSignature Language="VB.NET" Value="Public Property EndTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime EndTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-115">Возвращает или задает <b>даты и времени</b> , указывающего на то время окончания для шаблона повторения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-115">Returns or sets a <b>DateTime</b> indicating the end time for a recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-116">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-116">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-117">
            <para>Это свойство используется только для встреч.</para>
            <para>При создании <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> указанного объекта и не часовые пояса для встречи, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" /> и <b>EndTime</b> объекта <b>RecurrencePattern</b> основаны на часовой пояс, указанного идентификатором <see cref="P:Microsoft.Office.Interop.Outlook._TimeZones.CurrentTimeZone" />.</para>
            <para>, Если вы хотите создать повторяющейся встречи для конкретного часового пояса, необходимо сначала создать <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />, задайте <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.StartTimeZone" />, а затем вызвать <see cref="M:Microsoft.Office.Interop.Outlook._AppointmentItem.GetRecurrencePattern" />. <b>RecurrencePattern</b> объект, возвращенный будут иметь оба <b>StartTime</b> и <b>EndTime</b> по часовой пояс, указанного идентификатором <b>AppointmentItem.StartTimeZone</b>. Обратите внимание на то, что в диалоговом окне повторения встречи время указано как запустить <b>RecurrencePattern.StartTime</b> , основанное на <b>AppointmentItem.StartTimeZone</b>, но время указано, как окончания не всегда совпадает с <b> RecurrencePattern.EndTime</b> которого основана на <b>AppointmentItem.StartTimeZone</b>; на основе значения отображаемых времени <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.EndTimeZone" />. </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-117">
              <para>This property is only valid for appointments. </para>
              <para>When you create a <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object and no time zones have been specified for the appointment, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" /> and <b>EndTime</b> of the <b>RecurrencePattern</b> object are based on the time zone specified by <see cref="P:Microsoft.Office.Interop.Outlook._TimeZones.CurrentTimeZone" />. </para>
              <para>If you want to create a recurring appointment for a particular time zone, you should first create an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />, set <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.StartTimeZone" />, and then call <see cref="M:Microsoft.Office.Interop.Outlook._AppointmentItem.GetRecurrencePattern" />. The <b>RecurrencePattern</b> object returned will have both <b>StartTime</b> and <b>EndTime</b> based on the time zone specified by <b>AppointmentItem.StartTimeZone</b>. Note that in the Appointment Recurrence dialog box, the time indicated as Start is <b>RecurrencePattern.StartTime</b> which is based on <b>AppointmentItem.StartTimeZone</b>, but the time indicated as End is not always the same as  <b>RecurrencePattern.EndTime</b> which is based on <b>AppointmentItem.StartTimeZone</b>; the displayed time value is based on <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.EndTimeZone" />. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exceptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Exceptions Exceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Exceptions Exceptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Exceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exceptions As Exceptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Exceptions ^ Exceptions { Microsoft::Office::Interop::Outlook::Exceptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Exceptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-118">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" /> семейства сайтов для указанной последовательности повторяющихся встреч.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-118">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" />  collection for a specified series of recurring appointments.</span>
          </span>
          <span data-ttu-id="06da9-119">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-119">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-120">
            <para>При работе с элементами повторяющихся встреч, освобождать любой предыдущий справочные материалы, перед доступ или изменить элемент и удалить эти ссылки сразу по завершении и сохранения получить новые ссылки к повторяющейся встречи изменения. Такой подход применяется к регулярное <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объекта и какие-либо <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> или <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекта. Для удаления ссылки в Visual Basic задано значение <b>Nothing</b>, существующий объект. В C# явно освободить память для этого объекта. </para>
            <para>Обратите внимание, что даже после освобождения ссылки и попытаться получить ссылку на новый, если по-прежнему активная ссылка, назначенные другой надстройки или Outlook к одному из объектов выше, новая ссылка будет по-прежнему указывать на устаревшую копию объекта . Таким образом, важно освобождение ссылки сразу же по завершении с повторяющейся встречи.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-120">
              <para>When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes. This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. To release a reference in Visual Basic, set that existing object to <b>Nothing</b>. In C#, explicitly release the memory for that object. </para>
              <para>Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOccurrence">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.AppointmentItem GetOccurrence (DateTime StartDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.AppointmentItem GetOccurrence([in]valuetype System.DateTime StartDate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.RecurrencePattern.GetOccurrence(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOccurrence (StartDate As DateTime) As AppointmentItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::AppointmentItem ^ GetOccurrence(DateTime StartDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.AppointmentItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StartDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="StartDate">
          <span data-ttu-id="06da9-121">Значение типа <b>Date</b> , представляющий местного времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-121">A <b>Date</b> value that represents local time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06da9-122">Возвращает определенный экземпляр <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объектов в указанную дату.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-122">Returns a specific instance of the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object on the specified date.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06da9-123">Объект <b>AppointmentItem</b> , который представляет конкретную встречу в указанную дату.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-123">An <b>AppointmentItem</b> object that represents the specific appointment on the specified date.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="06da9-124">
            <para>
              <b>Примечание</b>: метод <b>GetOccurrence</b> генерирует ошибку, если нет встречи ряда существует на указанную дату.</para>
            <para>При работе с элементами повторяющихся встреч, освобождать любой предыдущий справочные материалы, перед доступ или изменить элемент и удалить эти ссылки сразу по завершении и сохранения получить новые ссылки к повторяющейся встречи изменения. Такой подход применяется к регулярное <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объекта и какие-либо <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> или <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекта. Для удаления ссылки в Visual Basic задано значение <b>Nothing</b>, существующий объект. В C# явно освободить память для этого объекта. </para>
            <para>Обратите внимание, что даже после освобождения ссылки и попытаться получить ссылку на новый, если по-прежнему активная ссылка, назначенные другой надстройки или Outlook к одному из объектов выше, новая ссылка будет по-прежнему указывать на устаревшую копию объекта . Таким образом, важно освобождение ссылки сразу же по завершении с повторяющейся встречи.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-124">
              <para>
                <b>Note</b>: The <b>GetOccurrence</b> method generates an error if no appointment of that series exists on the specified date.</para>
              <para>When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes. This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. To release a reference in Visual Basic, set that existing object to <b>Nothing</b>. In C#, explicitly release the memory for that object. </para>
              <para>Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public int Instance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Property Instance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Instance { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4099)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4099)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4099)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-125">Возвращает или задает <b>Integer</b> (<b>целое</b> в C#) значение, определяющее число, для которого шаблон повторения является допустимым для заданного интервала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-125">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value specifying the count for which the recurrence pattern is valid for a given interval.</span>
          </span>
          <span data-ttu-id="06da9-126">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-126">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-127">
            <para>Это свойство допустимо только для повторения типа <b>olRecursMonthNth</b> и <b>olRecursYearNth</b> и разрешает определение шаблона повторения, который действителен только в n-й вхождение, например, «2-й воскресенье марта» шаблона. Подсчет задано числовым: 1 для первого, 2 — для второго и т. д-5 для последнего. Значения, превышающие 5 будет возвращать ошибки при сохранении сопоставляться с шаблоном.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-127">
              <para>This property is only valid for recurrences of the <b>olRecursMonthNth</b> and <b>olRecursYearNth</b> type and allows the definition of a recurrence pattern that is only valid for the Nth occurrence, such as "the 2nd Sunday in March" pattern. The count is set numerically: 1 for the first, 2 for the second, and so on through 5 for the last. Values greater than 5 will generate errors when the pattern is saved. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-128">Возвращает или задает <b>Integer</b> (<b>int</b> в C#) значение, указывающее количество единиц конкретного типа повторения между вхождений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-128">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value specifying the number of units of a given recurrence type between occurrences.</span>
          </span>
          <span data-ttu-id="06da9-129">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-129">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-130">
            <para>Свойство <b>Interval</b> необходимо установить до установки <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />. </para>
            <para>, Например установка для свойства <b>интервал</b> 2 и <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> свойства olRecursWeekly вызовет шаблон будет выполнена каждую вторую неделю.</para>
            <para>При olRecursYearNth или olRecursYear, свойство <b>Interval</b><b>RecurrenceType</b> показывает, сколько лет между вхождений. К примеру, <b>интервал</b> равняется 1 указывает повторения каждый год, равно <b>интервал</b> 2 указывает повторения каждые 2 года и т. д.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-130">
              <para>The <b>Interval</b> property must be set before setting <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />. </para>
              <para>For example, setting the <b>Interval</b> property to 2 and the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" />  property to olRecursWeekly would cause the pattern to occur every second week.</para>
              <para>When <b>RecurrenceType</b> is set to olRecursYearNth or olRecursYear, the <b>Interval</b> property indicates the number of years between occurrences. For example, <b>Interval</b> equals 1 indicates the recurrence is every year, <b>Interval</b> equals 2 indicates the recurrence is every 2 years, and so on.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MonthOfYear">
      <MemberSignature Language="C#" Value="public int MonthOfYear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MonthOfYear" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.MonthOfYear" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MonthOfYear { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-131">Возвращает или задает <b>Integer</b> (<b>int</b> в C#) значение, указывающее, является допустимым для указанного повторения какой месяц года.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-131">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value indicating which month of the year is valid for the specified recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-132">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-132">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-133">
            <para>Значение может быть число от 1 до 12. Например, для этого свойства до 5 и <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> свойства <b>olRecursYearly</b> вызовет повторение будет выполнена каждые мая. Это свойство допустимо только для которых свойство <b>RecurrenceType</b> задано значение <b>olRecursYearly</b> или <b>olRecursYearNth</b>шаблоны повторения.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-133">
              <para>The value can be a number from 1 through 12. For example, setting this property to 5 and the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" />  property to <b>olRecursYearly</b> would cause this recurrence pattern to occur every May. This property is only valid for recurrence patterns whose <b>RecurrenceType</b> property is set to <b>olRecursYearly</b> or <b>olRecursYearNth</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEndDate">
      <MemberSignature Language="C#" Value="public bool NoEndDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoEndDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />
      <MemberSignature Language="VB.NET" Value="Public Property NoEndDate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoEndDate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-134">Возвращает значение <b>типа Boolean</b> (<b>bool</b> в C#), которое указывает значение True, если шаблон повторения не имеет даты завершения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-134">Returns a <b>Boolean</b> (<b>bool</b> in C#) value that indicates True if the recurrence pattern has no end date.</span>
          </span>
          <span data-ttu-id="06da9-135">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-135">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-136">
            <para>Это свойство должно быть согласованных с другими свойствами, при настройке шаблона повторения. Если <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" /> свойство или <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" /> свойству, шаблон считается конечное и свойство <b>NoEndDate</b> имеет <b>значение False</b>. Если ни <b>PatternEndDate</b> , ни <b>вхождения</b> , шаблон считается не ограничен и <b>NoEndDate</b> имеет <b>значение True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-136">
              <para>This property must be coordinated with other properties when setting up a recurrence pattern. If the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />  property or the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />  property is set, the pattern is considered to be finite and the <b>NoEndDate</b> property is <b>False</b>. If neither <b>PatternEndDate</b> nor <b>Occurrences</b> is set, the pattern is considered infinite and <b>NoEndDate</b> is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Occurrences">
      <MemberSignature Language="C#" Value="public int Occurrences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Occurrences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrences As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Occurrences { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-137">Возвращает или задает <b>Integer</b> (<b>int</b> в C#) значение, указывающее количество повторов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-137">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value indicating the number of occurrences of the recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-138">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-138">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-139">
            <para>Это свойство разрешает определение шаблона повторения, который действителен только в указанное количество последующих вхождений. Например можно задать это свойство до 10 для официальную учебного курса, который будет храниться на следующих десяти вечером четверг. Это свойство должно быть согласованных с другими свойствами, при настройке шаблона повторения. Если <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" /> значение свойства или свойства <b>вхождения</b> , шаблон считается конечное и <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" /> свойство имеет <b>значение False</b>. Если ни <b>PatternEndDate</b> , ни <b>вхождения</b> , шаблон считается не ограничен и <b>NoEndDate</b> имеет <b>значение True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-139">
              <para>This property allows the definition of a recurrence pattern that is only valid for the specified number of subsequent occurrences. For example, you can set this property to 10 for a formal training course that will be held on the next ten Thursday evenings. This property must be coordinated with other properties when setting up a recurrence pattern. If the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />  property or the <b>Occurrences</b> property is set, the pattern is considered to be finite and the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />  property is <b>False</b>. If neither <b>PatternEndDate</b> nor <b>Occurrences</b> is set, the pattern is considered infinite and <b>NoEndDate</b> is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-140">Возвращает родительский <b>объект</b> заданного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-140">Returns the parent <b>Object</b> of the specified object.</span>
          </span>
          <span data-ttu-id="06da9-141">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-141">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatternEndDate">
      <MemberSignature Language="C#" Value="public DateTime PatternEndDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime PatternEndDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />
      <MemberSignature Language="VB.NET" Value="Public Property PatternEndDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime PatternEndDate { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4098)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4098)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4098)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-142">Возвращает или задает <b>даты и времени</b> , указывающее дату окончания для повторения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-142">Returns or sets a <b>DateTime</b> indicating the end date for the recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-143">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-143">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-144">
            <para>Это свойство является необязательным, но должны координироваться со другие свойства при настройке шаблона повторения. Если это свойство или <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" /> значение свойства, то шаблон считается ограничение и <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" /> свойство имеет <b>значение False</b>. Если ни <b>PatternEndDate</b> , ни <b>вхождения</b> , шаблон считается не ограничен и <b>NoEndDate</b> имеет <b>значение True</b>. <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" /> Перед переключением <b>PatternEndDate</b>должно быть установлено свойство.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-144">
              <para>This property is optional but must be coordinated with other properties when setting up a recurrence pattern. If this property or the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />  property is set, the pattern is considered to be finite, and the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />  property is <b>False</b>. If neither <b>PatternEndDate</b> nor <b>Occurrences</b> is set, the pattern is considered infinite and <b>NoEndDate</b> is <b>True</b>. The <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" />  property must be set before setting <b>PatternEndDate</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PatternStartDate">
      <MemberSignature Language="C#" Value="public DateTime PatternStartDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime PatternStartDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" />
      <MemberSignature Language="VB.NET" Value="Public Property PatternStartDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime PatternStartDate { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-145">Возвращает или задает <b>даты и времени</b> , указывающее, Дата начала для повторения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-145">Returns or sets a <b>DateTime</b> indicating the start date for the recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-146">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-146">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurrenceType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlRecurrenceType RecurrenceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlRecurrenceType RecurrenceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurrenceType As OlRecurrenceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlRecurrenceType RecurrenceType { Microsoft::Office::Interop::Outlook::OlRecurrenceType get(); void set(Microsoft::Office::Interop::Outlook::OlRecurrenceType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlRecurrenceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-147">Возвращает или задает <see cref="T:Microsoft.Office.Interop.Outlook.OlRecurrenceType" /> константу, определяющую частота вхождений для повторения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-147">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlRecurrenceType" /> constant specifying the frequency of occurrences for the recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-148">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-148">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-149">
            <para>Необходимо установить свойство <b>RecurrenceType</b> перед настройкой других свойств для <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекта. Свойства <b>RecurrencePattern</b> , которые впоследствии можно задать зависит от значения <b>RecurrenceType</b>, как показано в следующей таблице:</para>
            <list type="table">
              <item>
                <description>OlRecurrenceType</description>
                <description>Допустимые свойства RecurrencePattern</description>
              </item>
              <item>
                <description>
                  <b>olRecursDaily</b>
                </description>
                <description>
                  <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Duration" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" /></description>
              </item>
              <item>
                <description>
                  <b>olRecursWeekly</b>
                </description>
                <description>
                  <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" />, <b>длительность</b>, <b>время окончания</b>, <b>интервала</b>, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
              </item>
              <item>
                <description>
                  <b>olRecursMonthly</b>
                </description>
                <description>
                  <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfMonth" />, <b>длительность</b>, <b>время окончания</b>, <b>интервала</b>, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b> Время начала</b></description>
              </item>
              <item>
                <description>
                  <b>olRecursMonthNth</b>
                </description>
                <description>
                  <b>DayOfWeekMask</b>, <b>длительность</b>, <b>время окончания</b>, <b>интервал</b><see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Instance" />, <b>NoEndDate</b>, <b>вхождения</b><b>PatternStartDate </b>, <b>PatternEndDate</b>, <b>время начала</b></description>
              </item>
              <item>
                <description>
                  <b>olRecursYearly</b>
                </description>
                <description>
                  <b>день месяца</b>, <b>длительность</b>, <b>время окончания</b>, <b>интервала</b>, <b>MonthOfYear</b>, <b>NoEndDate</b><b>Вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
              </item>
              <item>
                <description>
                  <b>olRecursYearNth</b>
                </description>
                <description>
                  <b>DayOfWeekMask</b>, <b>длительность</b>, <b>EndTime</b><b>интервал </b>, <b>Экземпляр</b>, <b>NoEndDate</b>, <b>вхождения</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>время начала</b></description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-149">
              <para>You must set the <b>RecurrenceType</b> property before you set other properties for a <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. The <b>RecurrencePattern</b> properties that you can set subsequently depends on the value of  <b>RecurrenceType</b>, as shown in the following table:</para>
              <list type="table">
                <item>
                  <description>OlRecurrenceType</description>
                  <description>Valid RecurrencePattern Properties</description>
                </item>
                <item>
                  <description>
                    <b>olRecursDaily</b>
                  </description>
                  <description>
                    <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Duration" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Interval" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.NoEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Occurrences" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternStartDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.PatternEndDate" />, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" /></description>
                </item>
                <item>
                  <description>
                    <b>olRecursWeekly</b>
                  </description>
                  <description>
                    <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfWeekMask" />, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
                </item>
                <item>
                  <description>
                    <b>olRecursMonthly</b>
                  </description>
                  <description>
                    <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.DayOfMonth" />, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
                </item>
                <item>
                  <description>
                    <b>olRecursMonthNth</b>
                  </description>
                  <description>
                    <b>DayOfWeekMask</b>, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Instance" />, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
                </item>
                <item>
                  <description>
                    <b>olRecursYearly</b>
                  </description>
                  <description>
                    <b>DayOfMonth</b>, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>MonthOfYear</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
                </item>
                <item>
                  <description>
                    <b>olRecursYearNth</b>
                  </description>
                  <description>
                    <b>DayOfWeekMask</b>, <b>Duration</b>, <b>EndTime</b>, <b>Interval</b>, <b>Instance</b>, <b>NoEndDate</b>, <b>Occurrences</b>, <b>PatternStartDate</b>, <b>PatternEndDate</b>, <b>StartTime</b></description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Regenerate">
      <MemberSignature Language="C#" Value="public bool Regenerate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Regenerate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Regenerate" />
      <MemberSignature Language="VB.NET" Value="Public Property Regenerate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Regenerate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-150">Возвращает значение <b>типа Boolean</b> (<b>bool</b> в C#), которое указывает <b>значение True</b> , если задачи должны восстанавливаются после этого прохода через шаблона повторения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-150">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates <b>True</b> if the task should be regenerated following this pass through the recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-151">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-151">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-152">
            <para>Это свойство используется для управления повторного создания задачи как завершенные все вхождения повторяющейся задачи. Допустимо только для задачи. Не является допустимым для встреч.</para>
            <para>Для создания шаблона повторения, сначала нужно задать <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> свойство, чтобы задать частоту, затем присвойте свойству <b>Обновите</b> значение <b>True,</b> Чтобы воссоздать задачи. После установки <b>повторно создать</b> значение <b>True</b>, не задать значение <b>False.</b> Если впоследствии настройкой <b>Обновите</b> значение <b>False</b>, то следует настроить шаблон повторения еще раз, получив новый <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекта. </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-152">
              <para>This property is used to control the regeneration of the task as each occurrence of a recurring task is completed. It is only valid for tasks. It is not valid for appointments.</para>
              <para>To create a recurrence pattern, you must first set the <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.RecurrenceType" /> property to set the frequency, then set the <b>Regenerate</b> property  to <b>True</b> to regenerate the task. After setting <b>Regenerate</b> to <b>True</b>, do not set it to <b>False</b>. If you subsequently set <b>Regenerate</b> to <b>False</b>, then you should set up the recurrence pattern again by getting a new <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-153">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> объекта для текущего сеанса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-153">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span>
          </span>
          <span data-ttu-id="06da9-154">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-154">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-155">
            <para>Свойство <b>сеанса</b> и <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> взаимозаменяемыми метод для получения объекта <b>пространства имен</b> для текущего сеанса. Члены по своему назначению. Например следующие пары операторов выполнить те же функции.</para>
            <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
            <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
            <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
            <code>Outlook.NameSpace objSession = Application.Session;</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-155">
              <para>The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session. Both members serve the same purpose. For example, the following pairs of statements perform the same function:</para>
              <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
              <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
              <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
              <code>Outlook.NameSpace objSession = Application.Session;</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTime">
      <MemberSignature Language="C#" Value="public DateTime StartTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime StartTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.StartTime" />
      <MemberSignature Language="VB.NET" Value="Public Property StartTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime StartTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06da9-156">Возвращает или задает <b>даты и времени</b> , которое указывает время начала для шаблона повторения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-156">Returns or sets a <b>DateTime</b> indicating the start time for a recurrence pattern.</span>
          </span>
          <span data-ttu-id="06da9-157">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-157">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="06da9-158">
            <para>Это свойство используется только для встреч.</para>
            <para>При создании <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> указанного объекта и не часовые пояса для встречи, <b>время начала</b> и <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" /> объекта <b>RecurrencePattern</b> на основе часового пояса, указанного идентификатором <see cref="P:Microsoft.Office.Interop.Outlook._TimeZones.CurrentTimeZone" />.</para>
            <para>, Если вы хотите создать повторяющейся встречи для конкретного часового пояса, необходимо сначала создать <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />, задайте <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.StartTimeZone" />, а затем вызвать <see cref="M:Microsoft.Office.Interop.Outlook._AppointmentItem.GetRecurrencePattern" />. <b>RecurrencePattern</b> объект, возвращенный будут иметь оба <b>StartTime</b> и <b>EndTime</b> по часовой пояс, указанного идентификатором <b>AppointmentItem.StartTimeZone</b>. Обратите внимание на то, что в диалоговом окне повторения встречи время указано как запустить <b>RecurrencePattern.StartTime</b> , основанное на <b>AppointmentItem.StartTimeZone</b>, но время указано, как окончания не всегда совпадает с <b> RecurrencePattern.EndTime</b> которого основана на <b>AppointmentItem.StartTimeZone</b>; на основе значения отображаемых времени <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.EndTimeZone" />. </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06da9-158">
              <para>This property is only valid for appointments.</para>
              <para>When you create a <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object and no time zones have been specified for the appointment, <b>StartTime</b> and <see cref="P:Microsoft.Office.Interop.Outlook.RecurrencePattern.EndTime" /> of the <b>RecurrencePattern</b> object are based on the time zone specified by <see cref="P:Microsoft.Office.Interop.Outlook._TimeZones.CurrentTimeZone" />. </para>
              <para>If you want to create a recurring appointment for a particular time zone, you should first create an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />, set <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.StartTimeZone" />, and then call <see cref="M:Microsoft.Office.Interop.Outlook._AppointmentItem.GetRecurrencePattern" />. The <b>RecurrencePattern</b> object returned will have both <b>StartTime</b> and <b>EndTime</b> based on the time zone specified by <b>AppointmentItem.StartTimeZone</b>. Note that in the Appointment Recurrence dialog box, the time indicated as Start is <b>RecurrencePattern.StartTime</b> which is based on <b>AppointmentItem.StartTimeZone</b>, but the time indicated as End is not always the same as  <b>RecurrencePattern.EndTime</b> which is based on <b>AppointmentItem.StartTimeZone</b>; the displayed time value is based on <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.EndTimeZone" />. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>