<Type Name="Exception" FullName="Microsoft.Office.Interop.Outlook.Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47943f3ce7b614b555767c32ad8d514efe3bf2b1" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27899987" /></Metadata><TypeSignature Language="C#" Value="public interface Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006304D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fa1f9-101">Представляет сведения об одном экземпляре <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объекта, который является исключением повторяющегося ряда.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-101">Represents information about one instance of an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object which is an exception to a recurring series.</span></span></summary>
    <remarks><para> <span data-ttu-id="fa1f9-102">В отличие от большинства других объектов Microsoft Outlook, объект <b>Exception</b> является объектом, предназначенным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-102">Unlike most of the other Microsoft Outlook objects, the <b>Exception</b> object is a read-only object.</span></span> <span data-ttu-id="fa1f9-103">Это означает, что вы не можете создать объект <b>Exception</b> , а вместо этого объект создается при изменении свойства объекта <b>AppointmentItem</b> .</span><span class="sxs-lookup"><span data-stu-id="fa1f9-103">This means that you cannot create an <b>Exception</b> object but, rather, the object is created when a property of an <b>AppointmentItem</b> is altered.</span></span> <span data-ttu-id="fa1f9-104">Например <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" /> , если изменить свойство одного <b>AppointmentItem</b>, вы создали <b>исключение</b> в <b>AppointmentItem. RecurrencePattern. Exceptions</b>.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-104">For example, if you change the <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" />  property of one <b>AppointmentItem</b>, you have created an <b>Exception</b> in <b>AppointmentItem.RecurrencePattern.Exceptions</b>.</span></span></para>
      <para><span data-ttu-id="fa1f9-105">
        <b>Note</b>: <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" /> объект находится в объекте <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> , а не в самом объекте <b>AppointmentItem</b> .</span><span class="sxs-lookup"><span data-stu-id="fa1f9-105">
        <b>Note</b>: The <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" />  object is on the <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> , not the <b>AppointmentItem</b> object itself.</span></span></para>
      <para><span data-ttu-id="fa1f9-106">При работе с элементами повторяющихся встреч необходимо удалить все ранее существовавшие ссылки, получить новые ссылки на элемент повторяющейся встречи перед вызовом или изменением этого элемента и удалить эти ссылки сразу же по окончании внесения изменений и их сохранения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-106">When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes.</span></span> <span data-ttu-id="fa1f9-107">Это правило применяется к повторяющемуся <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объекту, а также к любому <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> объекту или <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекту.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-107">This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object.</span></span> <span data-ttu-id="fa1f9-108">Чтобы удалить ссылки в Visual Basic, следует установить для этого существующего объекта значение <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-108">To release a reference in Visual Basic, set that existing object to <b>Nothing</b>.</span></span> <span data-ttu-id="fa1f9-109">В C# следует явно освободить память для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-109">In C#, explicitly release the memory for that object.</span></span> </para>
      <para><span data-ttu-id="fa1f9-p103">Обратите внимание, что даже после высвобождения ссылки и попытки получения новой ссылки, если по-прежнему существует активная ссылка на любой из вышеупомянутых объектов, удерживаемая другой надстройкой или приложением Outlook, новая ссылка будет указывать на устаревшую копию объекта. В связи с этим важно высвобождать ссылки немедленно после завершения текущей встречи.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-p103">Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-112">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> объект, представляющий родительское приложение Outlook для объекта.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-112">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="fa1f9-113">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-113">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppointmentItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.AppointmentItem AppointmentItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.AppointmentItem AppointmentItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.AppointmentItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppointmentItem As AppointmentItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::AppointmentItem ^ AppointmentItem { Microsoft::Office::Interop::Outlook::AppointmentItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.AppointmentItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-114">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объект, который является исключением.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-114">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object that is the exception.</span></span> <span data-ttu-id="fa1f9-115">Недопустимый для удаленных встреч.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-115">Not valid for deleted appointments.</span></span> <span data-ttu-id="fa1f9-116">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fa1f9-117">При работе с элементами повторяющихся встреч необходимо удалить все ранее существовавшие ссылки, получить новые ссылки на элемент повторяющейся встречи перед вызовом или изменением этого элемента и удалить эти ссылки сразу же по окончании внесения изменений и их сохранения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-117">When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes.</span></span> <span data-ttu-id="fa1f9-118">Это правило применяется к повторяющемуся <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> объекту, а также к любому <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> объекту или <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> объекту.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-118">This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object.</span></span> <span data-ttu-id="fa1f9-119">Чтобы удалить ссылки в Visual Basic, следует установить для этого существующего объекта значение <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-119">To release a reference in Visual Basic, set that existing object to <b>Nothing</b>.</span></span> <span data-ttu-id="fa1f9-120">В C# следует явно освободить память для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-120">In C#, explicitly release the memory for that object.</span></span> </para>
          <para><span data-ttu-id="fa1f9-p107">Обратите внимание, что даже после высвобождения ссылки и попытки получения новой ссылки, если по-прежнему существует активная ссылка на любой из вышеупомянутых объектов, удерживаемая другой надстройкой или приложением Outlook, новая ссылка будет указывать на устаревшую копию объекта. В связи с этим важно высвобождать ссылки немедленно после завершения текущей встречи.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-p107">Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-123">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> константу, указывающую класс объекта.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-123">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="fa1f9-124">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-124">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public bool Deleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Deleted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Deleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Deleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-125">Возвращает <b>логическое</b> значение (<b>bool</b> в C#), <b>если оно</b> <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> было удалено из шаблона повторения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-125">Returns <b>Boolean</b> (<b>bool</b> in C#) that is <b>True</b> if the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  was deleted from the recurring pattern.</span></span> <span data-ttu-id="fa1f9-126">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="fa1f9-126">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.ItemProperties ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.ItemProperties ItemProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ItemProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::ItemProperties ^ ItemProperties { Microsoft::Office::Interop::Outlook::ItemProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.ItemProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-127">Этот объект, элемент или перечисление устарели и не предназначены для использования в коде.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-127">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDate">
      <MemberSignature Language="C#" Value="public DateTime OriginalDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OriginalDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.OriginalDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OriginalDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-128">Возвращает <b>значение типа DateTime</b> , указывающее дату и время <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> начала изменения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-128">Returns a <b>DateTime</b> indicating the original date and time of an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  before it was altered.</span></span> <span data-ttu-id="fa1f9-129">Это свойство будет возвращать исходную дату, даже если <b>AppointmentItem</b> был удален.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-129">This property will return the original date even if the <b>AppointmentItem</b> has been deleted.</span></span> <span data-ttu-id="fa1f9-130">Однако он не будет возвращать исходное время, если было удалено.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-130">However, it will not return the original time if deletion has occurred.</span></span> <span data-ttu-id="fa1f9-131">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-131">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-132">Возвращает родительский <b>объект</b> указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-132">Returns the parent <b>Object</b> of the specified object.</span></span> <span data-ttu-id="fa1f9-133">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-133">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa1f9-134">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> объект для текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-134">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="fa1f9-135">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fa1f9-136">Свойство <b>Session</b> и <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> метод можно использовать в качестве взаимозаменяемого для получения объекта <b>пространства имен</b> для текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-136">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="fa1f9-137">Оба участника выполняют одну и ту же задачу.</span><span class="sxs-lookup"><span data-stu-id="fa1f9-137">Both members serve the same purpose.</span></span> <span data-ttu-id="fa1f9-138">Например, следующие пары операторов выполняют одну и ту же функцию:</span><span class="sxs-lookup"><span data-stu-id="fa1f9-138">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>