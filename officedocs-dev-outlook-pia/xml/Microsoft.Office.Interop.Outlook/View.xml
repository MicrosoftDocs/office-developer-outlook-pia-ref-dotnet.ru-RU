<Type Name="View" FullName="Microsoft.Office.Interop.Outlook.View">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87b0e2f941bfdd33517182275daf75a85449684a" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27903169" /></Metadata><TypeSignature Language="C#" Value="public interface View" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract View" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.View" />
  <TypeSignature Language="VB.NET" Value="Public Interface View" />
  <TypeSignature Language="C++ CLI" Value="public interface class View" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063095-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="276fc-101">Представляет настраиваемое представление, используемое для сортировки, группировки и просмотра данных.</span><span class="sxs-lookup"><span data-stu-id="276fc-101">Represents a customizable view used to sort, group, and view data.</span></span></summary>
    <remarks><para><span data-ttu-id="276fc-102">Объект <b>View</b> позволяет создавать настраиваемые представления, позволяющие лучше сортировать, группировать и, в конечном счете, просматривать данные всех различных типов.</span><span class="sxs-lookup"><span data-stu-id="276fc-102">The <b>View</b> object allows you to create customizable views that allow you to better sort, group and ultimately view data of all different types.</span></span> <span data-ttu-id="276fc-103">Существуют различные типы представлений, которые обеспечивают гибкость при создании и обслуживании важных данных.</span><span class="sxs-lookup"><span data-stu-id="276fc-103">There are a variety of different view types that provide the flexibility needed to create and maintain your important data.</span></span></para>
      <list type="bullet">
        <item>
          <para><span data-ttu-id="276fc-104">Тип представления таблицы (Олтаблевиев) позволяет просматривать данные в простой таблице на основе полей.</span><span class="sxs-lookup"><span data-stu-id="276fc-104">The table view type (olTableView) allows you to view data in a simple field-based table.</span></span> </para>
        </item>
        <item>
          <para> <span data-ttu-id="276fc-105">Тип представления календаря (Олкалендарвиев) позволяет просматривать данные в формате календаря.</span><span class="sxs-lookup"><span data-stu-id="276fc-105">The Calendar view type (olCalendarView) allows you to view data in a calendar format.</span></span> </para>
        </item>
        <item>
          <para> <span data-ttu-id="276fc-106">Тип представления карточками (Олкардвиев) позволяет просматривать данные в ряде карточек.</span><span class="sxs-lookup"><span data-stu-id="276fc-106">The card view type (olCardView) allows you to view data in a series of cards.</span></span> <span data-ttu-id="276fc-107">Каждая карточка отображает информацию, содержащуюся в элементе, и может быть отсортирована.</span><span class="sxs-lookup"><span data-stu-id="276fc-107">Each card displays the information contained by the item and can be sorted.</span></span> </para>
        </item>
        <item>
          <para> <span data-ttu-id="276fc-108">Тип представления значками (Оликонвиев) позволяет просматривать данные в виде значков, аналогично папке или проводнику Windows.</span><span class="sxs-lookup"><span data-stu-id="276fc-108">The icon view type (olIconView) allows you to view data as icons, similar to a Windows folder or explorer.</span></span>  </para>
        </item>
        <item>
          <para> <span data-ttu-id="276fc-109">Тип представления временной шкалы (Олтимелиневиев) позволяет просматривать данные при их получении в настраиваемой линейной шкале времени.</span><span class="sxs-lookup"><span data-stu-id="276fc-109">The timeline view type (olTimelineView) allows you to view data as it is received in a customizable linear time line.</span></span> </para>
        </item>
      </list>
      <para><span data-ttu-id="276fc-110">Представления определяются и настраиваются с <b>View</b> помощью <see cref="P:Microsoft.Office.Interop.Outlook.View.XML" /> свойства объекта View.</span><span class="sxs-lookup"><span data-stu-id="276fc-110">Views are defined and customized using the <b>View</b> object's <see cref="P:Microsoft.Office.Interop.Outlook.View.XML" />  property.</span></span> <span data-ttu-id="276fc-111">Свойство <b>XML</b> позволяет создать и настроить настраиваемую схему XML, определяющую различные возможности представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-111">The <b>XML</b> property allows you to create and set a customized XML schema that defines the various features of a view.</span></span></para>
      <para><span data-ttu-id="276fc-112">Используйте <b>views</b>(<paramref name="index" />), <paramref name="index" /> где — это имя объекта <b>представления</b> или его порядкового значения, чтобы получить один объект <b>представления</b> .</span><span class="sxs-lookup"><span data-stu-id="276fc-112">Use <b>Views</b>(<paramref name="index" />), where <paramref name="index" /> is the name of the <b>View</b> object or its ordinal value, to return a single <b>View</b> object.</span></span></para>
      <para><span data-ttu-id="276fc-113">Используйте <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" /> метод коллекции <b>views</b> для создания нового представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-113">Use the <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />  method of the <b>Views</b> collection to create a new view.</span></span> </para>
      <para><span data-ttu-id="276fc-114">Всегда используйте <see cref="M:Microsoft.Office.Interop.Outlook.View.Save" /> для сохранения представления после того, как вы измените любое свойство представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-114">Always use <see cref="M:Microsoft.Office.Interop.Outlook.View.Save" /> to save a view after you change any property of the view.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-115">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> объект, представляющий родительское приложение Outlook для объекта.</span><span class="sxs-lookup"><span data-stu-id="276fc-115">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="276fc-116">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="276fc-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276fc-117">Применяет представление к пользовательскому интерфейсу Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="276fc-117">Applies the view to the Microsoft Outlook user interface.</span></span></summary>
        <remarks><para><span data-ttu-id="276fc-118">Чтобы правильно сбросить текущее представление, необходимо создать <see cref="M:Microsoft.Office.Interop.Outlook.View.Reset" /> <b>представление. Apply</b>.</span><span class="sxs-lookup"><span data-stu-id="276fc-118">To properly reset the current view, you must do a <see cref="M:Microsoft.Office.Interop.Outlook.View.Reset" /> and then a <b>View.Apply</b>.</span></span> <span data-ttu-id="276fc-119">В приведенном ниже примере кода показан порядок вызовов:</span><span class="sxs-lookup"><span data-stu-id="276fc-119">The code sample below illustrates the order of the calls:</span></span></para>
          <code>Sub ResetView()
    Dim v As Outlook.View
    ' Save a reference to the current view object
    v = Application.ActiveExplorer().CurrentView
    ' Reset and then apply the current view
    v.Reset()
    v.Apply()
End Sub</code>
          <code>private void ResetView()
{
    // Save a reference to the current view object    
    Outlook.View v = Application.ActiveExplorer().CurrentView 
        as Outlook.View; 
    
    // Reset and then apply the current view
    v.Reset();
    v.Apply();
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-120">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> константу, указывающую класс объекта.</span><span class="sxs-lookup"><span data-stu-id="276fc-120">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="276fc-121">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="276fc-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.View Copy (string Name, Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.View Copy([in]string Name, [in]valuetype Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Copy(System.String,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Name As String, Optional SaveOption As OlViewSaveOption) As View" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="SaveOption" Type="Microsoft.Office.Interop.Outlook.OlViewSaveOption" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="276fc-122">Представляет имя нового объекта <b>представления</b> .</span><span class="sxs-lookup"><span data-stu-id="276fc-122">Represents the name of the new <b>View</b> object.</span></span></param>
        <param name="SaveOption"><span data-ttu-id="276fc-123">Параметр Save, определяющий разрешения объекта <b>View</b> .</span><span class="sxs-lookup"><span data-stu-id="276fc-123">The save option that defines the permissions of the <b>View</b> object.</span></span></param>
        <summary><span data-ttu-id="276fc-124">Создает новый экземпляр <see cref="T:Microsoft.Office.Interop.Outlook.View" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="276fc-124">Creates a new instance of a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276fc-125">Удаляет объект из коллекции.</span><span class="sxs-lookup"><span data-stu-id="276fc-125">Deletes an object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-126">Возвращает или задает значение <b>типа String</b> (<b>строка</b> в C#), представляющее фильтр для представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-126">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the filter for a view.</span></span>  <span data-ttu-id="276fc-127">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="276fc-127">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-128">Значением этого свойства является строка в синтаксисе поиска по протоколу DAV (DASL), которая представляет текущий фильтр для представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-128">The value of this property is a string, in DAV Searching and Locating (DASL) syntax, that represents the current filter for the view.</span></span> <span data-ttu-id="276fc-129">Дополнительные сведения об использовании синтаксиса DASL для фильтрации элементов в представлении можно узнать в статье <a href="http://go.microsoft.com/fwlink/?LinkId=87855">Фильтрация элементов</a></span><span class="sxs-lookup"><span data-stu-id="276fc-129">For more information about using DASL syntax to filter items in a view, see <a href="http://go.microsoft.com/fwlink/?LinkId=87855">Filtering Items</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToDate">
      <MemberSignature Language="C#" Value="public void GoToDate (DateTime Date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoToDate([in]valuetype System.DateTime Date) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.GoToDate(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoToDate (Date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoToDate(DateTime Date);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Date"><span data-ttu-id="276fc-130">Дата, до которой должно быть изменено представление.</span><span class="sxs-lookup"><span data-stu-id="276fc-130">The date to which the view should be changed.</span></span></param>
        <summary><span data-ttu-id="276fc-131">Изменяет дату, используемую текущим представлением, для отображения сведений.</span><span class="sxs-lookup"><span data-stu-id="276fc-131">Changes the date used by the current view to display information.</span></span></summary>
        <remarks><para><span data-ttu-id="276fc-132">Чтобы указать <see cref="T:Microsoft.Office.Interop.Outlook.CalendarView" /> дату, на которую нужно перейти в текущем представлении, например объект, сначала необходимо получить <see cref="T:Microsoft.Office.Interop.Outlook.View" /> объект для текущего представления, используя <see cref="P:Microsoft.Office.Interop.Outlook._Explorer.CurrentView" /> вместо. <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.CurrentView" /></span><span class="sxs-lookup"><span data-stu-id="276fc-132">To specify a date to go to in a current view, such as a <see cref="T:Microsoft.Office.Interop.Outlook.CalendarView" /> object, you should first obtain a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object for the current view by using <see cref="P:Microsoft.Office.Interop.Outlook._Explorer.CurrentView" /> instead of <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.CurrentView" />.</span></span> <span data-ttu-id="276fc-133">В приведенном ниже примере кода показано, как выполнить это действие.</span><span class="sxs-lookup"><span data-stu-id="276fc-133">The following code sample demonstrates how to perform this action.</span></span> </para>
          <code>Sub TestGoToDate()
    Dim oCV As Outlook.CalendarView
    Dim oExpl As Outlook.Explorer
    Dim datGoTo As Date

    datGoTo = "11/7/2005"

    ' Display the contents of the Calendar default folder.
    oExpl = Application.Explorers.Add( _
        Application.Session.GetDefaultFolder( -
        Outlook.OlDefaultFolders.olFolderCalendar), _
        Outlook.OlFolderDisplayMode.olFolderDisplayFolderOnly)
    oExpl.Display()

    ' Retrieve the current view by calling the 
    ' CurrentView property of the Explorer object.
    oCV = oExpl.CurrentView

    ' Set the CalendarViewMode property of the 
    ' current view to display items by day.
    oCV.CalendarViewMode = Outlook.OlCalendarViewMode.olCalendarViewDay

    ' Call the GoToDate method to set the date
    ' for which information is displayed in the view.
    oCV.GoToDate(datGoTo)
End Sub</code>
          <code>private void TestGoToDate()
{
    Outlook.CalendarView oCV;
    Outlook.Explorer oExpl;
    System.DateTime datGoTo;

    datGoTo = DateTime.Parse("11/7/2005");

    // Display the contents of the Calendar default folder.
    oExpl = Application.Explorers.Add(
        Application.Session.GetDefaultFolder(
        Outlook.OlDefaultFolders.olFolderCalendar),
        Outlook.OlFolderDisplayMode.olFolderDisplayFolderOnly);
    oExpl.Display();

    // Retrieve the current view by calling the 
    // CurrentView property of the Explorer object.
    oCV = (Outlook.CalendarView)(oExpl.CurrentView);

    // Set the CalendarViewMode property of the 
    // current view to display items by day.
    oCV.CalendarViewMode = 
        Outlook.OlCalendarViewMode.olCalendarViewDay;

    // Call the GoToDate method to set the date
    // for which information is displayed in the view.
    oCV.GoToDate(datGoTo);
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-134">Возвращает или задает значение <b>типа String</b> (<b>строка</b> в C#), представляющее языковой параметр объекта, который определяет язык, используемый в меню.</span><span class="sxs-lookup"><span data-stu-id="276fc-134">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the language setting for the object that defines the language used in the menu.</span></span> <span data-ttu-id="276fc-135">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="276fc-135">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-136">Свойство <b>Language</b> использует <b>строку</b> (<b>строка</b> в C#) для представления тега языка ISO.</span><span class="sxs-lookup"><span data-stu-id="276fc-136">The <b>Language</b> property uses a <b>String</b> (<b>string</b> in C#) to represent an ISO language tag.</span></span> <span data-ttu-id="276fc-137">Например, строка "EN-US" представляет код ISO для "США-английский".</span><span class="sxs-lookup"><span data-stu-id="276fc-137">For example, the string "EN-US" represents the ISO code for "United States - English."</span></span></para>
          <para><span data-ttu-id="276fc-138">Если указан допустимый код языка, объект будет доступен только в меню Вид для указанного типа языка.</span><span class="sxs-lookup"><span data-stu-id="276fc-138">If a valid language code is specified, the object will only be available in the View menu for the specified language type.</span></span> <span data-ttu-id="276fc-139">Если значение не указано, элемент объекта доступен для всех типов языка.</span><span class="sxs-lookup"><span data-stu-id="276fc-139">If no value is specified, the object item is available for all language types.</span></span> <span data-ttu-id="276fc-140">Значение по умолчанию для этого свойства — пустая строка.</span><span class="sxs-lookup"><span data-stu-id="276fc-140">The default value for this property is an empty string.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LockUserChanges">
      <MemberSignature Language="C#" Value="public bool LockUserChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockUserChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.LockUserChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property LockUserChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LockUserChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-141">Возвращает или задает значение <b>логического</b> значения (<b>bool</b> в C#), которое указывает, может ли пользователь изменять параметры текущего представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-141">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) value that indicates whether a user can modify the settings of the current view.</span></span> <span data-ttu-id="276fc-142">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="276fc-142">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-143">Если <b>имеет значение true</b>, пользователь может изменять параметры текущего представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-143">If <b>True</b>, the user can modify the settings of the current view.</span></span> <span data-ttu-id="276fc-144">Однако изменения, внесенные в интерфейс, не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="276fc-144">However, changes made to the interface will not be saved.</span></span> <span data-ttu-id="276fc-145">Если задано <b>значение false</b> (значение по умолчанию), все изменения будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="276fc-145">If <b>False</b> (the default), any changes will be saved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Name" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-146">Возвращает или задает значение <b>типа String</b> (<b>строка</b> в C#), представляющее отображаемое имя объекта.</span><span class="sxs-lookup"><span data-stu-id="276fc-146">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the display name for the object.</span></span> <span data-ttu-id="276fc-147">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="276fc-147">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-148">Возвращает родительский <b>объект</b> указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="276fc-148">Returns the parent <b>Object</b> of the specified object.</span></span> <span data-ttu-id="276fc-149">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="276fc-149">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64068)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276fc-150">Восстанавливает исходные параметры встроенного представления Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="276fc-150">Resets a built-in Microsoft Outlook view to its original settings.</span></span></summary>
        <remarks><para><span data-ttu-id="276fc-151">Этот метод работает только со встроенными представлениями Outlook.</span><span class="sxs-lookup"><span data-stu-id="276fc-151">This method works only on built-in Outlook views.</span></span></para>
          <para><span data-ttu-id="276fc-152">Чтобы правильно сбросить текущее представление, необходимо выполнить <b>представление. Reset</b> , а затем <see cref="M:Microsoft.Office.Interop.Outlook.View.Apply" />.</span><span class="sxs-lookup"><span data-stu-id="276fc-152">To properly reset the current view, you must do a <b>View.Reset</b> and then a <see cref="M:Microsoft.Office.Interop.Outlook.View.Apply" />.</span></span> <span data-ttu-id="276fc-153">В приведенном ниже примере кода показан порядок вызовов:</span><span class="sxs-lookup"><span data-stu-id="276fc-153">The code sample below illustrates the order of the calls:</span></span></para>
          <code>Sub ResetView()
    Dim v as Outlook.View
    ' Save a reference to the current view object
    Set v = Application.ActiveExplorer().CurrentView
    ' Reset and then apply the current view
    v.Reset
    v.Apply
End Sub</code>
          <code>private void ResetView()
{
    // Save a reference to the current view object    
    Outlook.View v = Application.ActiveExplorer().CurrentView 
        as Outlook.View; 
    
    // Reset and then apply the current view
    v.Reset();
    v.Apply();
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276fc-154">Сохранение представления или сохранение изменений в представлении.</span><span class="sxs-lookup"><span data-stu-id="276fc-154">Saves the view, or saves the changes to a view.</span></span></summary>
        <remarks><para><span data-ttu-id="276fc-155">Всегда используйте параметр <b>сохранить</b> для сохранения представления после изменения любого свойства представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-155">Always use <b>Save</b> to save a view after you change any property of the view.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveOption">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.SaveOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SaveOption As OlViewSaveOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlViewSaveOption SaveOption { Microsoft::Office::Interop::Outlook::OlViewSaveOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlViewSaveOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-156">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.OlViewSaveOption" /> константу, указывающую папки, в которых доступно указанное представление и разрешения на чтение, присоединенные к представлению.</span><span class="sxs-lookup"><span data-stu-id="276fc-156">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlViewSaveOption" />  constant that specifies the folders in which the specified view is available and the read permissions attached to the view.</span></span>  <span data-ttu-id="276fc-157">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="276fc-157">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-158">Свойство <b>SaveOption</b> задается при создании <see cref="T:Microsoft.Office.Interop.Outlook.View" /> объекта с помощью <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" /> метода.</span><span class="sxs-lookup"><span data-stu-id="276fc-158">The <b>SaveOption</b> property is set when the <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object is created by using the <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />  method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-159">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> объект для текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="276fc-159">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="276fc-160">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="276fc-160">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-161">Свойство <b>Session</b> и <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> метод можно использовать в качестве взаимозаменяемого для получения объекта <b>пространства имен</b> для текущего сеанса.</span><span class="sxs-lookup"><span data-stu-id="276fc-161">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="276fc-162">Оба участника выполняют одну и ту же задачу.</span><span class="sxs-lookup"><span data-stu-id="276fc-162">Both members serve the same purpose.</span></span> <span data-ttu-id="276fc-163">Например, следующие пары операторов выполняют одну и ту же функцию:</span><span class="sxs-lookup"><span data-stu-id="276fc-163">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="public bool Standard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Standard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Standard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Standard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Standard { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-164">Возвращает <b>логическое значение</b> (<b>bool</b> в C#), которое указывает, является ли представление встроенным представлением Outlook.</span><span class="sxs-lookup"><span data-stu-id="276fc-164">Returns a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether or not the view is a built-in Outlook view.</span></span> <span data-ttu-id="276fc-165">Только для чтения</span><span class="sxs-lookup"><span data-stu-id="276fc-165">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlViewType ViewType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlViewType ViewType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.ViewType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewType As OlViewType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlViewType ViewType { Microsoft::Office::Interop::Outlook::OlViewType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlViewType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-166">Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.OlViewType" /> константу, представляющую тип представления <see cref="T:Microsoft.Office.Interop.Outlook.View" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="276fc-166">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlViewType" />  constant representing the view type of a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object.</span></span> <span data-ttu-id="276fc-167">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="276fc-167">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-168">Это свойство не влияет на значки, отображаемые в области ярлыки.</span><span class="sxs-lookup"><span data-stu-id="276fc-168">This property does not have any effect on the icons displayed in the Shortcuts pane.</span></span> <span data-ttu-id="276fc-169">Крупные значки удалены, и если для этого свойства задано значение <b>олларжеикон</b>, это никак не оказывает никакого действия.</span><span class="sxs-lookup"><span data-stu-id="276fc-169">Large icons have been removed and if this property is set to <b>olLargeIcon</b>, it will not have any effect.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.XML" />
      <MemberSignature Language="VB.NET" Value="Public Property XML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276fc-170">Возвращает или задает значение <b>типа String</b> (<b>строка</b> в C#), задающее XML-определение текущего представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-170">Returns or sets a <b>String</b> (<b>string</b> in C#) value that specifies the XML definition of the current view.</span></span>  <span data-ttu-id="276fc-171">Для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="276fc-171">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="276fc-172">В XML-определении описывается тип представления с помощью ряда тегов и ключевых слов, соответствующих различным свойствам представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-172">The XML definition describes the view type by using a series of tags and keywords corresponding to various properties of the view itself.</span></span> <span data-ttu-id="276fc-173">При создании представления XML-определение анализируется для отображения параметров нового представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-173">When the view is created, the XML definition is parsed to render the settings for the new view.</span></span></para>
          <para><span data-ttu-id="276fc-174">Чтобы определить структуру XML при создании представлений, можно создать представление с помощью пользовательского интерфейса Outlook, а затем можно получить свойство XML для этого представления.</span><span class="sxs-lookup"><span data-stu-id="276fc-174">To determine how the XML should be structured when creating views, you can create a view by using the Outlook user interface and then you can retrieve the XML property for that view.</span></span></para>
          <para><span data-ttu-id="276fc-175">Чтобы программно добавить настраиваемое поле в представление, используйте <see cref="M:Microsoft.Office.Interop.Outlook._ViewFields.Add(System.String)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="276fc-175">To programmatically add a custom field to a view, use the <see cref="M:Microsoft.Office.Interop.Outlook._ViewFields.Add(System.String)" /> method.</span></span> <span data-ttu-id="276fc-176">Это рекомендуемый способ динамического изменения представления с указанием свойства <b>View. XML</b> .</span><span class="sxs-lookup"><span data-stu-id="276fc-176">This is the recommended way to dynamically change the view over setting the <b>View.XML</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>