<Type Name="_FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook._FormRegionStartup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34bd4c4bdf22fffb31f02727f5872c4371b275f" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27904583" /></Metadata><TypeSignature Language="C#" Value="public interface _FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Это основной интерфейс в компонентном классе COM, необходимые для управляемого кода для взаимодействия с соответствующим COM-объектом. Этот основной интерфейс используется только в том случае, если метод, который будет использоваться совместно совпадает с именем событие COM-объектом; в этом случае преобразовывается этот интерфейс для вызова метода и приведены последние интерфейс события для подключения к событию. В противном случае используется интерфейс .NET, который является производным от компонентного класса COM для доступа к методы, свойства и события COM-объектом. Сведения о COM-объектом, в разделе <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeFormRegionShow">
      <MemberSignature Language="C#" Value="public void BeforeFormRegionShow (Microsoft.Office.Interop.Outlook.FormRegion FormRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeFormRegionShow([in]class Microsoft.Office.Interop.Outlook.FormRegion FormRegion) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeFormRegionShow(Microsoft::Office::Interop::Outlook::FormRegion ^ FormRegion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegion" Type="Microsoft.Office.Interop.Outlook.FormRegion" />
      </Parameters>
      <Docs>
        <param name="FormRegion">Объект <b>FormRegion</b> , представляющий область формы, который должен отображаться.</param>
        <summary>Разрешает надстройки для обновления пользовательского интерфейса области формы перед отображением.</summary>
        <remarks><para>Этот метод позволяет передавать объект <b>FormRegion</b> надстройки Outlook и позволяет надстройки для обновления пользовательского интерфейса области формы перед отображением, чтобы, например, можно изменить текст метки или нерелевантного контента можно было отменено. Вызывается после экземпляры элементов управления и расчета макета, но перед формы области делается видимым. </para>
          <para>При реализации этого метода, следует помнить, что элемент получен из <paramref name="FormRegion" /> параметр (то есть, <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /> свойства объекта <b>FormRegion</b> ) доступен только для чтения.</para>
          <para>Примеры надстроек в C# и Visual Basic .NET, которые реализуют <b>FormRegionStartup</b>увидите, что пример кода файлы для загрузки на сайте MSDN.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionIcon">
      <MemberSignature Language="C#" Value="public object GetFormRegionIcon (string FormRegionName, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionIcon([in]string FormRegionName, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionIcon (FormRegionName As String, LCID As Integer, Icon As OlFormRegionIcon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionIcon(System::String ^ FormRegionName, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionIcon Icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="Icon" Type="Microsoft.Office.Interop.Outlook.OlFormRegionIcon" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">Имя области формы, который является имя, используемое при регистрации область формы в реестре Windows.</param>
        <param name="LCID">Идентификатор языкового стандарта, который определяет язык, на котором в настоящее время с помощью Outlook. Это значение используется для получения строки локализации, соответствующие этот язык для области формы.</param>
        <param name="Icon">Константа, которая идентифицирует тип значок.</param>
        <summary>Получает изображение значка, который будет отображаться для определенного типа значка области формы.</summary>
        <returns><b>Объект</b> , который является либо-массив байтов, который представляет исходного байт файла изображения или объект <b>IPictureDisp</b> .</returns>
        <remarks><para>Этот метод предназначен для реализации, надстройки и именем с Outlook. Как часть <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> этот метод интерфейса и <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" /> метод предоставляют механизм, через который надстройки можно зарегистрировать области формы и обеспечения области формы Outlook с помощью XML-манифест и значки.</para>
          <para>Если вы хотите надстройки для предоставления значки для области формы, укажите идентификатор ProgID для надстройки во время регистрации область формы в реестре Windows. Дополнительные сведения о регистрации области формы можно <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Областей форм в реестре Windows</a><b>GetFormRegionManifest</b> и <b>GetFormRegionIcon</b> методы интерфейса <b>FormRegionStartup</b> . </para>
          <para>В XML-манифест области формы в элементе значки укажите addin значение для каждого из дочерних элементов, где вы хотите использовать пользовательский значок.  Таким образом, когда Outlook передает типа значка в качестве аргумента для реализации <b>GetFormRegionIcon</b> <paramref name="Icon" />, <b>GetFormRegionIcon</b> возвращает изображение пользовательский значок. Если необходимо, чтобы для отображения значка по умолчанию в Outlook, реализуйте <b>GetFormRegionIcon</b> таким образом, что она возвращает <b>значение Nothing</b> (пустая ссылка (Nothing в Visual Basic) в C#) для этого типа значка. <b>GetFormRegionIcon</b> также вернет <b>значение Nothing</b> (пустая ссылка (Nothing в Visual Basic) в C#) при <paramref name="Icon" /> — это <b>olFormRegionIconDefault</b>.</para>
          <para> При запуске Outlook считывает список областей формы из реестра Windows и кэширует данные, связанные с областями форм. Если область формы зарегистрировано в ProgID, Outlook будет прибегать к соответствующей надстройки путем вызова его реализации <b>GetFormRegionIcon</b> для любого значка в XML-манифеста, который имеет addin как значение дочерним элементом элемента значки. Обратите внимание, что если не указать любой ProgID в реестре Windows, Outlook не вызывайте методы <b>GetFormRegionManifest</b> и <b>GetFormRegionIcon</b> .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionManifest">
      <MemberSignature Language="C#" Value="public object GetFormRegionManifest (string FormRegionName, int LCID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionManifest([in]string FormRegionName, [in]int32 LCID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionManifest (FormRegionName As String, LCID As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionManifest(System::String ^ FormRegionName, int LCID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">Имя области формы, который является имя, используемое при регистрации область формы в реестре Windows.</param>
        <param name="LCID">Идентификатор языкового стандарта, который определяет язык, на котором в настоящее время с помощью Outlook. Это значение используется для получения строки локализации, соответствующие этот язык для области формы.</param>
        <summary>Получает XML-манифест области формы.</summary>
        <returns><b>Объект</b> , представляющий XML-манифест области формы. В этом XML-строка включает в себя характеристики области формы, такие как отображаемое имя (как указано в элементе title), любой файл размещения или надстройки, все поддерживаемые действия пользователя и любые строки локализации. XML-код должны соответствовать схеме formRegion XML. Дополнительные сведения о схеме XML formRegion см Microsoft Outlook 2010 Справочник по схеме XML в <a href="http://msdn.microsoft.com/en-us/library/default.aspx">Библиотеке MSDN</a></returns>
        <remarks><para>Этот метод предназначен для реализации, надстройки и именем с Outlook. Как часть <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> этот метод интерфейса и <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" /> метод предоставляют механизм, через который надстройки можно зарегистрировать области формы и укажите Outlook XML-манифест и значки для области формы.</para>
          <para>Если вы хотите надстройки для предоставления XML-манифест области формы, укажите идентификатор ProgID для надстройки во время регистрации область формы в реестре Windows. Дополнительные сведения о регистрации области формы, см <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Областей форм в реестре Windows</a><b>GetFormRegionManifest</b> интерфейса <b>FormRegionStartup</b> . Обратите внимание, что если не указать любой ProgID в реестре Windows, Outlook не вызывать этот метод.</para>
          <para>Использовать надстройки для предоставления XML-манифест области формы также означает, что позволяет надстройки для предоставления значки для области формы. Надстройки также необходимо реализовать <b>GetFormRegionIcon</b> интерфейса <b>FormRegionStartup</b> . Outlook вызывает <b>GetFormRegionIcon</b> для получения надстройки указанного значки для области формы. Дополнительные сведения об использовании надстройки для указания значки можно <a href="http://go.microsoft.com/fwlink/?LinkId=87934">как: использование добавить в укажите значки для области формы</a></para>
          <para> При запуске Outlook считывает список областей формы из реестра Windows и кэширует данные. На основе этих данных, если обнаруживает, что надстройка был указан для предоставления XML-манифест области формы Outlook, Outlook будет использовать ProgID, представленные в кэшированные данные и вызовите метод <b>GetFormRegionManifest</b> , реализованный этой надстройки для получения XML, необходимые для отображения области формы. Если XML-манифеста не используется и не соответствует схеме formRegion XML, Outlook не сможет загрузить области формы. Кроме того Если не указать любой ProgID в реестре Windows, Outlook не будет вызвать методы <b>GetFormRegionManifest</b> и <b>GetFormRegionIcon</b> .</para>
          <para>Outlook игнорирует следующие элементы, если надстройка предоставляет XML-манифеста: </para>
          <list type="bullet">
            <item>
              <para>Имя: игнорирует значение, указанное для этого элемента Outlook и будет использовать имя, указанное для области формы в реестре.</para>
            </item>
            <item>
              <para>layoutFile: Outlook игнорирует этот элемент, так как надстройка расширение области формы.</para>
            </item>
            <item>
              <para>надстройка: Outlook используется значение, которое будет стоять знак равенства (=) в реестре как ProgID надстройки.</para>
            </item>
            <item>
              <para>атрибут stringOverride: Outlook игнорирует любые дополнительного локализации файл, указанный с помощью элемента stringOverride. Надстройки можно реализовать <b>GetFormRegionManifest</b> для возврата встроенного XML-манифеста для локализации строк для указанного <paramref name="LCID" />, или управление локализацию другим способом, например с помощью .NET Framework локализации и затем возвращает соответствующий XML-манифест для указанного <paramref name="LCID" />.</para>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionStorage">
      <MemberSignature Language="C#" Value="public object GetFormRegionStorage (string FormRegionName, object Item, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionStorage([in]string FormRegionName, [in]object Item, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionStorage (FormRegionName As String, Item As Object, LCID As Integer, FormRegionMode As OlFormRegionMode, FormRegionSize As OlFormRegionSize) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionStorage(System::String ^ FormRegionName, System::Object ^ Item, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode, Microsoft::Office::Interop::Outlook::OlFormRegionSize FormRegionSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64310)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="FormRegionMode" Type="Microsoft.Office.Interop.Outlook.OlFormRegionMode" />
        <Parameter Name="FormRegionSize" Type="Microsoft.Office.Interop.Outlook.OlFormRegionSize" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">Внутреннее имя области формы. Это может быть обозначается &lt;имя&gt; тег в соответствующем XML-манифеста области формы.</param>
        <param name="Item">Объект элемента Outlook, вызвавший загрузку области формы.</param>
        <param name="LCID">Текущий идентификатор языкового стандарта.</param>
        <param name="FormRegionMode">Область формы загружается в режиме.</param>
        <param name="FormRegionSize">Тип загружается, отдельные или прилегающей области формы.</param>
        <summary>Получает надлежащего хранения для области формы, основываясь на указанном информации.</summary>
        <returns><b>Объект</b> , представляющий для хранилища, выделенный Outlook для области формы. Может быть типа возвращаемого значения: <b>String</b> (<b>строка</b> в C#), представляющая, что возвращаемое значение — это локальный путь для хранилища форм Outlook (. Файл OFS); <b>Byte()</b> , представляющее возвращается массив байтов, которые содержит содержимое. OFS-файл; <b>IStorage</b> , представляющее, возвращаемым значением является COM-объектом хранилища <b>IStorage</b> (только для C++); <b>Значение Nothing</b> или <b>значение Null</b>, представляющее Outlook не удалось выделить хранилища для этой области формы и не будут загружаться области формы.</returns>
        <remarks><para>Надстройки должен проверять наличие возвращаемое значение <b>GetFormRegionStorage</b>. Область формы не будут загружаться, если какие-либо из следующих условий возвращенные хранилища:</para>
          <list type="bullet">
            <item>
              <para>Возвращенный хранилище. OFS-файл, указанный с внешней путь.</para>
            </item>
            <item>
              <para>Возвращенный хранилища представляет собой файл, но не. OFS-файл сохранен из конструктора форм.</para>
            </item>
          </list>
          <para>Примеры надстроек в C# и Visual Basic .NET, которые реализуют <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> интерфейса, просмотрите образец кода файлы для загрузки на сайте MSDN.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
