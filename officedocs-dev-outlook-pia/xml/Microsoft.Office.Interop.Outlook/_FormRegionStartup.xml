<Type Name="_FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook._FormRegionStartup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34bd4c4bdf22fffb31f02727f5872c4371b275f" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27904583" /></Metadata><TypeSignature Language="C#" Value="public interface _FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Это основной интерфейс в компонентном классе COM, который требуется управляемому программному коду для взаимодействия с соответствующим объектом COM. Используйте этот основной интерфейс только в тех случаях, когда метод, который предполагается использовать, имеет такое же имя, как событие объекта COM; в таких случаях для вызова метода приведите к этому интерфейсу, для соединения с событием приведите к интерфейсу последних событий. Иначе используйте интерфейс .NET, который создается но основе компонентного класса COM для доступа к методам, свойствам и событиям объекта COM. Сведения о COM-объекте приведены в разделе <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeFormRegionShow">
      <MemberSignature Language="C#" Value="public void BeforeFormRegionShow (Microsoft.Office.Interop.Outlook.FormRegion FormRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeFormRegionShow([in]class Microsoft.Office.Interop.Outlook.FormRegion FormRegion) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeFormRegionShow(Microsoft::Office::Interop::Outlook::FormRegion ^ FormRegion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegion" Type="Microsoft.Office.Interop.Outlook.FormRegion" />
      </Parameters>
      <Docs>
        <param name="FormRegion">Объект <b>formRegion</b> , представляющий область формы, которую необходимо отобразить.</param>
        <summary>Позволяет надстройке обновлять пользовательский интерфейс области формы перед его отображением.</summary>
        <remarks><para>Этот метод позволяет Outlook передать объект <b>formRegion</b> в надстройку и позволяет надстройке обновлять пользовательский интерфейс области формы перед отображением, чтобы можно было изменять текст меток, а также можно подавлять неуместное содержимое. Он вызывается после создания экземпляра элементов управления и вычисления макета, но до того, как область формы становится видимой. </para>
          <para>При реализации этого метода следует иметь в виду, что элемент, полученный <paramref name="FormRegion" /> из параметра (то есть, <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /> свойство объекта <b>formRegion</b> ), доступен только для чтения.</para>
          <para>Примеры надстроек C# и Visual Basic .NET, реализующих <b>FormRegionStartup</b>, приведены в статье Загрузка примеров кода на сайте MSDN.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionIcon">
      <MemberSignature Language="C#" Value="public object GetFormRegionIcon (string FormRegionName, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionIcon([in]string FormRegionName, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionIcon (FormRegionName As String, LCID As Integer, Icon As OlFormRegionIcon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionIcon(System::String ^ FormRegionName, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionIcon Icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="Icon" Type="Microsoft.Office.Interop.Outlook.OlFormRegionIcon" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">Имя области формы, которая является именем, используемым при регистрации области формы в реестре Windows.</param>
        <param name="LCID">КОД языка, определяющий язык, используемый в Outlook в текущий момент. Это значение используется для получения строк локализации, соответствующих данному языку для области формы.</param>
        <param name="Icon">Константа, определяющая тип значка.</param>
        <summary>Получает изображение значка, которое будет отображаться для определенного типа значка для области формы.</summary>
        <returns><b>Объект</b> , представляющий собой байтовый массив, представляющий исходные байты файла изображения или объекта <b>ипиктуредисп</b> .</returns>
        <remarks><para>Этот метод предназначен для реализации надстройкой и ее вызова в Outlook. В составе <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> интерфейса этот метод и <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" /> метод предоставляют механизм, с помощью которого надстройка может зарегистрировать область формы и предоставить Outlook доступ к XML-манифесту и значкам для области формы.</para>
          <para>Если вы хотите, чтобы надстройка предоставляла значки для области формы, укажите идентификатор ProgID для надстройки, когда вы регистрируете область формы в реестре Windows. Более подробную информацию о регистрации области формы можно узнать <a href="http://go.microsoft.com/fwlink/?LinkId=87933">в статье определение областей форм в реестре Windows</a><b>жетформрегионманифест</b> и методах <b>жетформрегионикон</b> интерфейса <b>FormRegionStartup</b> . </para>
          <para>В XML-манифесте для области формы под элементом icons (значки) укажите значение ADDIN для каждого дочернего элемента, для которого необходимо использовать пользовательский значок.  Реализуйте <b>жетформрегионикон</b> таким образом, что когда Outlook передает этот тип значка в <paramref name="Icon" />качестве аргумента, <b>жетформрегионикон</b> возвращает изображение настраиваемого значка. Если вы хотите, чтобы в Outlook отображался значок по умолчанию, реализуйте <b>жетформрегионикон</b> таким, чтобы он возвращал <b>Nothing</b> (пустая ссылка (Nothing в Visual Basic) в C#) для этого типа значка. <b>Жетформрегионикон</b> также должен возвратить значение <b>Nothing</b> (пустая ссылка (Nothing в Visual Basic) в C# <paramref name="Icon" /> ) при <b>олформрегионикондефаулт</b>.</para>
          <para> При запуске Outlook считывает список областей формы из реестра Windows и кэширует данные, связанные с областями форм. Если область формы зарегистрирована с помощью ProgID, Outlook выполнит соответствующую надстройку, вызвав ее реализацию <b>жетформрегионикон</b> для любого значка в XML-манифесте, где в качестве значения дочернего элемента элемента Icons используется надстройка. Обратите внимание, что если не указать ProgID в реестре Windows, Outlook не будет вызывать методы <b>жетформрегионманифест</b> и <b>жетформрегионикон</b> .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionManifest">
      <MemberSignature Language="C#" Value="public object GetFormRegionManifest (string FormRegionName, int LCID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionManifest([in]string FormRegionName, [in]int32 LCID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionManifest (FormRegionName As String, LCID As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionManifest(System::String ^ FormRegionName, int LCID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">Имя области формы, которая является именем, используемым при регистрации области формы в реестре Windows.</param>
        <param name="LCID">КОД языка, определяющий язык, используемый в Outlook в текущий момент. Это значение используется для получения строк локализации, соответствующих данному языку для области формы.</param>
        <summary>Получает XML-манифест для области формы.</summary>
        <returns><b>Объект</b> , представляющий XML-манифест для области формы. Эта XML-строка включает характеристики области формы, такие как отображаемое имя (как указано в элементе title), любой связанный файл макета или надстройка, любые поддерживаемые действия пользователя и строки локализации. XML-код должен соответствовать схеме XML области формы. Дополнительные сведения о схеме XML области формы можно найти в статье Справочник по XML-схеме Microsoft Outlook 2010 в <a href="http://msdn.microsoft.com/en-us/library/default.aspx">библиотеке MSDN</a></returns>
        <remarks><para>Этот метод предназначен для реализации надстройкой и ее вызова в Outlook. В рамках <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> интерфейса этот метод и <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" /> метод предоставляют механизм, с помощью которого надстройка может зарегистрировать область формы и предоставить XML-манифест и значки для области формы.</para>
          <para>Если вы хотите, чтобы надстройка предоставляла манифест XML для области формы, укажите идентификатор ProgID для надстройки, когда вы регистрируете область формы в реестре Windows. Более подробную информацию о регистрации области формы можно узнать <a href="http://go.microsoft.com/fwlink/?LinkId=87933">в статье определение областей форм в методе реестра Windows</a><b>жетформрегионманифест</b> интерфейса <b>FormRegionStartup</b> . Обратите внимание, что если не указать ProgID в реестре Windows, Outlook не будет вызывать этот метод.</para>
          <para>Полагаться на надстройку для предоставления XML-манифеста для области формы также означает, что надстройка должна предоставлять значки для области формы. Кроме того, надстройка должна реализовать <b>жетформрегионикон</b> интерфейса <b>FormRegionStartup</b> . Outlook будет вызывать <b>жетформрегионикон</b> для получения любой надстройки, заданной для области формы. Дополнительные сведения об использовании надстройки для указания значков можно узнать в статье <a href="http://go.microsoft.com/fwlink/?LinkId=87934">как: использование надстройки для задания значков для области формы</a></para>
          <para> При запуске Outlook считывает список областей формы из реестра Windows и кэширует данные. На основе этих данных, если Outlook заметит, что надстройка была указана для предоставления XML-манифеста для области формы, Outlook будет использовать ProgID, предоставленный в кэшированных данных, и вызвать метод <b>жетформрегионманифест</b> , реализованный этой надстройкой, для получения XML-кода, необходимого для отображения области формы. Если манифест XML не является допустимым и не соответствует схеме XML области формы, Outlook не сможет загрузить область формы. Кроме того, если вы не укажете ProgID в реестре Windows, Outlook не будет вызывать методы <b>жетформрегионманифест</b> и <b>жетформрегионикон</b> .</para>
          <para>Outlook игнорирует следующие элементы, когда надстройка предоставляет XML-манифест: </para>
          <list type="bullet">
            <item>
              <para>Name: Outlook игнорирует значение, указанное для этого элемента, и будет использовать имя, заданное для области формы в реестре.</para>
            </item>
            <item>
              <para>Лайаутфиле: Outlook игнорирует этот элемент, так как надстройка расширяет эту область формы.</para>
            </item>
            <item>
              <para>ADDIN: Outlook использует значение, которым предшествует знак равенства (=) в реестре, как ProgID надстройки.</para>
            </item>
            <item>
              <para>атрибут File объекта stringOverride: Outlook игнорирует любой дополнительный файл локализации, заданный элементом stringOverride. Надстройка может реализовать <b>жетформрегионманифест</b> для возврата встроенного XML-манифеста для указанной <paramref name="LCID" />локализации или управления локализацией строк другим способом, например с помощью локализации .NET Framework, а затем возврата соответствующего XML-манифеста для указанного. <paramref name="LCID" /></para>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionStorage">
      <MemberSignature Language="C#" Value="public object GetFormRegionStorage (string FormRegionName, object Item, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionStorage([in]string FormRegionName, [in]object Item, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionStorage (FormRegionName As String, Item As Object, LCID As Integer, FormRegionMode As OlFormRegionMode, FormRegionSize As OlFormRegionSize) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionStorage(System::String ^ FormRegionName, System::Object ^ Item, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode, Microsoft::Office::Interop::Outlook::OlFormRegionSize FormRegionSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64310)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="FormRegionMode" Type="Microsoft.Office.Interop.Outlook.OlFormRegionMode" />
        <Parameter Name="FormRegionSize" Type="Microsoft.Office.Interop.Outlook.OlFormRegionSize" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">Внутреннее имя области формы. Это может быть указано в теге &lt;Name&gt; в соответствующем XML-манифесте области формы.</param>
        <param name="Item">Объект элемента Outlook, вызвавший загрузку области формы.</param>
        <param name="LCID">Текущий идентификатор языкового стандарта.</param>
        <param name="FormRegionMode">Режим, в который загружается область формы.</param>
        <param name="FormRegionSize">Тип загружаемой области формы: примыкающую к себе или отделенную.</param>
        <summary>Получение подходящего хранилища для области формы на основе указанных сведений.</summary>
        <returns><b>Объект</b> , представляющий хранилище, выделенное приложением Outlook для области формы. Тип возвращаемого значения: <b>String</b> (<b>строка</b> в C#), представляющее, что возвращаемое значение является локальным путем к хранилищу формы Outlook (. OFS); <b>Byte ()</b> , представляющий, что возвращаемое значение представляет собой массив байтов, который содержит содержимое. Файл OFS; <b>IStorage</b> , представляющий, что возвращаемое значение является объектом хранилища com <b>IStorage</b> (только для C++); <b>Nothing</b> или <b>null</b>, представляя, что Outlook не может выделить хранилище для этой области формы и не будет загружать область формы.</returns>
        <remarks><para>Надстройка должна проверять возвращаемое значение <b>жетформрегионстораже</b>. Область формы не будет загружена, если в возвращенном хранилище выполняется одно из следующих условий:</para>
          <list type="bullet">
            <item>
              <para>Возвращенное хранилище —. OFS заданный путь не является локальным.</para>
            </item>
            <item>
              <para>Возвращенное хранилище представляет собой файл, но не является файлом. OFS файл, сохраненный в конструкторе форм.</para>
            </item>
          </list>
          <para>Примеры надстроек в C# и Visual Basic .NET, которые реализуют <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> интерфейс, вы найдете в статье Загрузка примеров кода на сайте MSDN.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
