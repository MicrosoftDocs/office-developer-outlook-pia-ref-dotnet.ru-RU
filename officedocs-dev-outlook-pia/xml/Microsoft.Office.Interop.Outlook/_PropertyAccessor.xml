<Type Name="_PropertyAccessor" FullName="Microsoft.Office.Interop.Outlook._PropertyAccessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78e2122c80a9c947755c0b2d0a28a1c207ecb94a" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27906214" /></Metadata><TypeSignature Language="C#" Value="public interface _PropertyAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _PropertyAccessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._PropertyAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface _PropertyAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class _PropertyAccessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006302D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Это основной интерфейс в компонентном классе COM, необходимые для управляемого кода для взаимодействия с соответствующим COM-объектом. Этот основной интерфейс используется только в том случае, если метод, который будет использоваться совместно совпадает с именем событие COM-объектом; в этом случае преобразовывается этот интерфейс для вызова метода и приведены последние интерфейс события для подключения к событию. В противном случае используется интерфейс .NET, который является производным от компонентного класса COM для доступа к методы, свойства и события COM-объектом. Сведения о COM-объектом, в разделе <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._PropertyAccessor.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> объект, представляющий родительский приложение (для Outlook) для <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryToString">
      <MemberSignature Language="C#" Value="public string BinaryToString (object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BinaryToString([in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.BinaryToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryToString (Value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BinaryToString(System::Object ^ Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Value">Представляет массив байтов для преобразования.</param>
        <summary>Преобразует массив байтов, указанное в <paramref name="Value" /> к типу <b>String</b> (<b>строка</b> в C#).</summary>
        <returns>Шестнадцатеричный <b>String</b> (<b>строка</b> в C#), представляющий преобразованное значение.</returns>
        <remarks><para>Дополнительные сведения о преобразовании типа при использовании объект <b>PropertyAccessor</b> см <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Best Practices for получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._PropertyAccessor.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает константу в <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> перечисление, указывающее, класс <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProperties">
      <MemberSignature Language="C#" Value="public object DeleteProperties (ref object SchemaNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DeleteProperties([in]object&amp; SchemaNames) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.DeleteProperties(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteProperties (ByRef SchemaNames As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeleteProperties(System::Object ^ % SchemaNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64402)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SchemaNames" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SchemaNames">Массив, содержащий имена свойств, которые должны быть удалены для родительский объект <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> объекта. Эти свойства для ссылки на пространство имен. Для получения дополнительных сведений см. <a href="http://go.microsoft.com/fwlink/?LinkId=87860">Создание ссылок на свойства пространством имен</a></param>
        <summary>Удаление свойств, указанных в массиве <paramref name="SchemaNames" />.</summary>
        <returns><b>Объект</b> , который является <b>значение Nothing</b> (пустая ссылка (Nothing в Visual Basic) в C#), если операция выполнена успешно, или массив объектов <b>Err</b> при возникновении ошибки. Если возвращаемым значением является массив, размер массива — это же, как SchemaNames массива. Значение <b>Err</b> в массиве сопоставляется удаление соответствующего свойства с помощью параметра SchemaNames в результате ошибки.</returns>
        <remarks><para>Вызывающего должен иметь разрешение на удаление свойства. Метод <b>DeleteProperties</b> удаляет только настраиваемые свойства, которые существуют. Любое свойство встроенных Outlook или любое свойство MAPI при этом не удаляются. Не удаляет пользовательские свойства <see cref="T:Microsoft.Office.Interop.Outlook.DocumentItem" /> объекта.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProperty">
      <MemberSignature Language="C#" Value="public void DeleteProperty (string SchemaName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteProperty([in]string SchemaName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.DeleteProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteProperty (SchemaName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteProperty(System::String ^ SchemaName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64401)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SchemaName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SchemaName">Имя свойства, которое нужно удалить для родительский объект <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> объекта. Ссылка на свойство — это пространство имен. Для получения дополнительных сведений см. <a href="http://go.microsoft.com/fwlink/?LinkId=87860">Создание ссылок на свойства пространством имен</a></param>
        <summary>Удаляет указанное свойство с <paramref name="SchemaName" />.</summary>
        <remarks><para>Вызывающего должен иметь разрешение на удаление свойства. Метод <b>DeleteProperty</b> удаляет настраиваемые свойства; любое свойство встроенных Outlook или любое свойство MAPI при этом не удаляются. Не удаляет пользовательские свойства <see cref="T:Microsoft.Office.Interop.Outlook.DocumentItem" /> объекта.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public object GetProperties (object SchemaNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetProperties([in]object SchemaNames) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (SchemaNames As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetProperties(System::Object ^ SchemaNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SchemaNames" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SchemaNames">Массив, содержащий имена свойств, значения которых должны быть возвращены. Эти свойства для ссылки на пространство имен. Для получения дополнительных сведений см. <a href="http://go.microsoft.com/fwlink/?LinkId=87860">Создание ссылок на свойства пространством имен</a></param>
        <summary>Получает значения свойств, указанных с одномерный массив <paramref name="SchemaNames" />.</summary>
        <returns><b>Объект</b> , представляющий массив значений свойств, указанных в параметре <paramref name="SchemaNames" />. Количество элементов в массиве равно числу элементов в <paramref name="SchemaNames" /> массива.  При возникновении ошибки для получения определенное свойство, значение <b>Err</b> будут возвращены в соответствующем расположении в возвращаемый массив.</returns>
        <remarks><para>Массив, возвращенный <b>GetProperties</b> может содержать элементы различных типов, в зависимости от типа запрошенное свойство. Тип элемента массива, возвращенного <b>GetProperties</b> будет совпадать с типом базового свойства. Некоторые типы необработанные свойство таких как <b>PT_OBJECT</b> не поддерживаются и вызовет ошибку. Если требуется преобразования типа необработанные свойства, например из <b>PT_BINARY</b> в строку или из <b>PT_SYSTIME</b> местное время использовать вспомогательные методы <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.BinaryToString(System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.UTCToLocalTime(System.DateTime)" />. </para>
          <para>Дополнительные сведения о получении свойств с помощью объект <b>PropertyAccessor</b> видеть <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Советы и рекомендации по получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public object GetProperty (string SchemaName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetProperty([in]string SchemaName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (SchemaName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetProperty(System::String ^ SchemaName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SchemaName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SchemaName">Имя свойства, значение которого должно быть возвращено. Ссылка на свойство — это пространство имен. Для получения дополнительных сведений см. <a href="http://go.microsoft.com/fwlink/?LinkId=87860">Создание ссылок на свойства пространством имен</a></param>
        <summary>Возвращает <b>объект</b> , представляющий значение свойства, указанного в <paramref name="SchemaName" />.</summary>
        <returns>Значение <b>объекта</b> , который представляет значение запрошенные свойства в соответствии с <paramref name="SchemaName" />.</returns>
        <remarks><para>Тип возвращаемого значения будет совпадать с типом базового свойства. Некоторые типы необработанные свойство таких как <b>PT_OBJECT</b> не поддерживаются и вызовет ошибку. Если требуется преобразования типа необработанные свойства, например из <b>PT_BINARY</b> в строку или из <b>PT_SYSTIME</b> местное время использовать вспомогательные методы <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.BinaryToString(System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.UTCToLocalTime(System.DateTime)" />. </para>
          <para>Дополнительные сведения о получении свойств с помощью объект <b>PropertyAccessor</b> видеть <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Советы и рекомендации по получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalTimeToUTC">
      <MemberSignature Language="C#" Value="public DateTime LocalTimeToUTC (DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime LocalTimeToUTC([in]valuetype System.DateTime Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.LocalTimeToUTC(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function LocalTimeToUTC (Value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime LocalTimeToUTC(DateTime Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Value">Значение даты и времени для преобразования из местного времени в формате UTC.</param>
        <summary>Преобразует значение даты и времени, указанного идентификатором <paramref name="Value" /> из формата местного времени в формате по Гринвичу (UTC).</summary>
        <returns>Значение даты и времени, представляющий <paramref name="Value" /> после выполняется преобразование из местного времени в формате UTC.</returns>
        <remarks><para>Дополнительные сведения о преобразовании типа при использовании объект <b>PropertyAccessor</b> см <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Best Practices for получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._PropertyAccessor.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._PropertyAccessor.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> объекта для текущего сеанса.  Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Свойство <b>сеанса</b> и <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> взаимозаменяемыми метод для получения <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> объекта для текущего сеанса. Члены по своему назначению. Например следующие пары операторов выполнить те же функции.</para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperties">
      <MemberSignature Language="C#" Value="public object SetProperties (object SchemaNames, object Values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SetProperties([in]object SchemaNames, [in]object Values) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.SetProperties(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperties (SchemaNames As Object, Values As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ SetProperties(System::Object ^ SchemaNames, System::Object ^ Values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SchemaNames" Type="System.Object" />
        <Parameter Name="Values" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SchemaNames">Массив имен свойств, значения которых должно быть задано как указано в параметре значений. Эти свойства для ссылки на пространство имен. Для получения дополнительных сведений см. <a href="http://go.microsoft.com/fwlink/?LinkId=87860">Создание ссылок на свойства пространством имен</a></param>
        <param name="Values">Массив значений, которые необходимо задать для свойства, указанного с помощью параметра SchemaNames.</param>
        <summary>Задает свойства, указанные в массиве <paramref name="SchemaNames" /> для значения, указанные в массиве <paramref name="Values" />.</summary>
        <returns><b>Объект</b> , который является <b>значение Nothing</b> (пустая ссылка (Nothing в Visual Basic) в C#), если операция выполнена успешно. Если перед любой задано ошибку, к примеру, число элементов в массиве SchemaNames не совпадает с именем в массиве значений и значение <b>Err</b> будут возвращены. Если во время настройки свойства ошибку, возвращаемое значение — это массив объектов <b>Err</b> числа элементов в массиве выполняется аналогично SchemaNames массива. Значение <b>Err</b> в массиве сопоставляется результат ошибки установки с помощью параметра SchemaNames соответствующего свойства.</returns>
        <remarks><para>Если свойство не существует и <paramref name="SchemaNames" /> элемент содержит свойство описателя, а затем <b>SetProperties</b> создает свойство и присваивает свойству со значением, заданным в <paramref name="Values" />. Тип свойства будет тип элемента, который передается в <paramref name="Values" />. Если свойство существует, а затем <b>SetProperties</b> присваивает свойству значение в соответствии с <paramref name="Values" />.</para>
          <para>Обратите внимание на то, что настраиваемое свойство, созданные с помощью <b>PropertyAccessor</b> не поддерживается в настраиваемом представлении. Если вы хотите просмотреть настраиваемого свойства элемента, создание свойства с помощью <see cref="M:Microsoft.Office.Interop.Outlook.UserProperties.Add(System.String,Microsoft.Office.Interop.Outlook.OlUserPropertyType,System.Object,System.Object)" /> метод.</para>
          <para>Если родительский объект <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> поддерживает явные операции <b>сохранения</b> , а затем свойства должна быть сохранена объекта с явных <b>Сохранить</b> вызова метода. Если объект не поддерживает явные операции <b>сохранения</b> , а затем свойства сохраняются в объекте при вызове <b>SetProperties</b> . </para>
          <para>Будьте внимательны и убедитесь, что все исключения обрабатывается правильно. Следующие условия, где происходит сбой Установка свойств:</para>
          <list type="bullet">
            <item>
              <para>Свойство только для чтения, как некоторые свойства Outlook и MAPI доступны только для чтения.</para>
            </item>
            <item>
              <para>Свойство, указанное в заданном пространстве имен не найден.</para>
            </item>
            <item>
              <para>Свойство указан недопустимый формат и невозможно выполнить синтаксический анализ.</para>
            </item>
            <item>
              <para>Это свойство не существует и не может быть создан.</para>
            </item>
            <item>
              <para>Свойство существует, но передается значение неверный тип.</para>
            </item>
            <item>
              <para>Не удается открыть свойство, так как он находится в автономном режиме.</para>
            </item>
            <item>
              <para>Свойство создается с помощью метода <b>Add</b> <see cref="T:Microsoft.Office.Interop.Outlook.UserProperties" /> объекта. При задании свойства в первый раз, необходимо использовать <see cref="P:Microsoft.Office.Interop.Outlook.UserProperty.Value" /> свойства <see cref="T:Microsoft.Office.Interop.Outlook.UserProperty" /> объекта, а не <b>SetProperties</b> или <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.SetProperty(System.String,System.Object)" /> метод объект <b>PropertyAccessor</b> .</para>
            </item>
          </list>
          <para>Дополнительные сведения о задании свойств с помощью объект <b>PropertyAccessor</b> см <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Best Practices for получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string SchemaName, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty([in]string SchemaName, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.SetProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (SchemaName As String, Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ SchemaName, System::Object ^ Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SchemaName" Type="System.String" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SchemaName">Имя свойства, значение которого равно должно быть задано как указано в <paramref name="Value" />. Ссылка на свойство — это пространство имен. Для получения дополнительных сведений см. <a href="http://go.microsoft.com/fwlink/?LinkId=87860">Создание ссылок на свойства пространством имен</a></param>
        <param name="Value">Значение, которое должно быть задано для свойства, указанного в <paramref name="SchemaName" />.</param>
        <summary>Задает свойства, указанного в <paramref name="SchemaName" /> значению, указанному с <paramref name="Value" />.</summary>
        <remarks><para>Если свойство не существует и <paramref name="SchemaName" /> содержит указатель допустимого свойства, затем <b>SetProperty</b> создает свойство и назначает значение, назначаемое <paramref name="Value" />. Если свойство существует и <paramref name="SchemaName" /> является допустимым, а затем <b>SetProperty</b> присваивает свойству со значением, заданным в <paramref name="Value" />.</para>
          <para>Обратите внимание на то, что настраиваемое свойство, созданные с помощью <b>PropertyAccessor</b> не поддерживается в настраиваемом представлении. Если вы хотите просмотреть настраиваемого свойства элемента, создание свойства с помощью <see cref="M:Microsoft.Office.Interop.Outlook.UserProperties.Add(System.String,Microsoft.Office.Interop.Outlook.OlUserPropertyType,System.Object,System.Object)" /> метод.</para>
          <para>Если родительский объект <b>PropertyAccessor</b> поддерживает явные операции <b>сохранения</b> , а затем свойства должна быть сохранена объекта с явных <b>Сохранить</b> вызова метода. Если объект не поддерживает явные операции <b>сохранения</b> , а затем свойства сохраняются в объекте при вызове <b>SetProperties</b> . </para>
          <para>Будьте внимательны и убедитесь, что все исключения обрабатывается правильно. Следующие условия, где происходит сбой Установка свойств:</para>
          <list type="bullet">
            <item>
              <para>Свойство только для чтения, как некоторые свойства Outlook и MAPI доступны только для чтения.</para>
            </item>
            <item>
              <para>Свойство, указанное в заданном пространстве имен не найден.</para>
            </item>
            <item>
              <para>Свойство указан недопустимый формат и невозможно выполнить синтаксический анализ.</para>
            </item>
            <item>
              <para>Это свойство не существует и не может быть создан.</para>
            </item>
            <item>
              <para>Свойство существует, но передается значение неверный тип.</para>
            </item>
            <item>
              <para>Не удается открыть свойство, так как он находится в автономном режиме.</para>
            </item>
            <item>
              <para>Свойство создается с помощью метода <b>Add</b> <see cref="T:Microsoft.Office.Interop.Outlook.UserProperties" /> объекта. При задании свойства в первый раз, необходимо использовать <see cref="P:Microsoft.Office.Interop.Outlook.UserProperty.Value" /> свойства <see cref="T:Microsoft.Office.Interop.Outlook.UserProperty" /> объекта, а не <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.SetProperties(System.Object,System.Object)" /> или метод <b>SetProperty</b> объект <b>PropertyAccessor</b> .</para>
            </item>
          </list>
          <para>Дополнительные сведения о задании свойств с помощью объект <b>PropertyAccessor</b> см <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Best Practices for получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToBinary">
      <MemberSignature Language="C#" Value="public object StringToBinary (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object StringToBinary([in]string Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.StringToBinary(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StringToBinary (Value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ StringToBinary(System::String ^ Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value">Шестнадцатеричное строковое значение, должен быть преобразован в массив байтов.</param>
        <summary>Преобразует строку, указанного идентификатором <paramref name="Value" /> для массива байтов.</summary>
        <returns>Значение <b>объекта</b> , который представляет массив байтов, возвращенных из преобразования.</returns>
        <remarks><para>Дополнительные сведения о преобразовании типа при использовании объект <b>PropertyAccessor</b> см <a href="http://go.microsoft.com/fwlink/?LinkId=87854">Best Practices for получение и установка свойств</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UTCToLocalTime">
      <MemberSignature Language="C#" Value="public DateTime UTCToLocalTime (DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime UTCToLocalTime([in]valuetype System.DateTime Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.UTCToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function UTCToLocalTime (Value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime UTCToLocalTime(DateTime Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Value">Преобразование времени в формате UTC в местное время значение даты и времени.</param>
        <summary>Преобразует значение даты и времени, заданного с <paramref name="Value" /> и выразить значение в локальном времени в формате UTC.</summary>
        <returns>Значение даты и времени, представляющий <paramref name="Value" /> после выполняется преобразование из UTC в местное время.</returns>
        <remarks><para>Дополнительные сведения о преобразовании типа при использовании <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> объекта, <a href="http://go.microsoft.com/fwlink/?LinkId=87854">рекомендации</a> по получение и установка свойств</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
